import{A as _,B as N,C as U,D as O,E as L,F as V,b,c as T,d as F,e as B,f as x,k as P,l as y,m as f,n as E,na as W,p as w,q as i,s as S,t as g,u as D,v,w as I,x as M,y as R,z as H}from"./chunk-MMNBKTVF.js";import{Ba as e,Ja as h,Ka as k,L as d,T as m,aa as r,ja as n,jb as A,ka as t,la as a,lb as C}from"./chunk-IWXHOVAQ.js";import{a as c,b as u}from"./chunk-FDERIQAA.js";var z={name:"Button"};var te=()=>["buttons/button"],j=(()=>{class o{constructor(){this.ButtonBasicExampleData=I,this.ButtonDisabledExampleData=M,this.ButtonIconExampleData=R,this.providingDefaultValuesExampleCode=`export const appConfig: ApplicationConfig = {
  providers: [
    // ... other providers
    provideButtonDefaults({ variant: 'sharp' }), // all buttons will now be sharp by default
  ],
};`}static{this.\u0275fac=function(l){return new(l||o)}}static{this.\u0275cmp=m({type:o,selectors:[["button-page"]],decls:278,vars:8,consts:[["pageTitle","Button"],["heading","Buttons overview",3,"data","isCodeShown"],["moduleName","ArdiumButtonModule",3,"styles"],[1,"button-table"],["color","none","appearance","raised-strong"],["color","primary","appearance","raised-strong"],["color","secondary","appearance","raised-strong"],["color","danger","appearance","raised-strong"],["color","warn","appearance","raised-strong"],["color","success","appearance","raised-strong"],["color","info","appearance","raised-strong"],["appearance","transparent","color","primary"],["appearance","raised","color","primary"],["appearance","raised-strong","color","primary"],["appearance","outlined","color","primary"],["appearance","outlined-strong","color","primary"],["appearance","flat","color","primary"],["variant","rounded","appearance","raised-strong","color","primary"],["variant","pill","appearance","raised-strong","color","primary"],["variant","sharp","appearance","raised-strong","color","primary"],["heading","Disabled buttons",3,"data"],["heading","Buttons with icons",3,"data","isCodeShown"],["language","typescript","styled","",3,"code"],["routerLink","/components/fab"],["routerLink","/components/icon-button"]],template:function(l,s){l&1&&(n(0,"app-introduction",0)(1,"p"),e(2,"A standard button component with flexible styling."),t(),a(3,"app-code-example",1),t(),a(4,"app-prerequisites",2),n(5,"section")(6,"app-h2"),e(7,"Styling Buttons"),t(),n(8,"p"),e(9," Button components offers a wide variety of styling options. The buttons can be customized in 3 main ways: color, appearance, and variant. "),t(),n(10,"app-h3"),e(11,"Colors"),t(),n(12,"p"),e(13,"Button color is the most straightforward property. There are 7 button colors available:"),t(),n(14,"table",3)(15,"thead")(16,"tr"),a(17,"th"),n(18,"th"),e(19,"Color"),t(),n(20,"th"),e(21,"Description"),t()()(),n(22,"tbody")(23,"tr")(24,"td")(25,"ard-button",4),e(26,"Button"),t()(),n(27,"td")(28,"code"),e(29,"none"),t()(),n(30,"td"),e(31," The uncolorized (white or black) version of the button. Should be used for general, lower-priority actions. "),t()(),n(32,"tr")(33,"td")(34,"ard-button",5),e(35,"Button"),t()(),n(36,"td")(37,"code"),e(38,"prmiary"),t()(),n(39,"td"),e(40,"The primary color of the button (default). Should be used for high-priority actions."),t()(),n(41,"tr")(42,"td")(43,"ard-button",6),e(44,"Button"),t()(),n(45,"td")(46,"code"),e(47,"secondary"),t()(),n(48,"td"),e(49,"The secondary color of the button."),t()(),n(50,"tr")(51,"td")(52,"ard-button",7),e(53,"Button"),t()(),n(54,"td")(55,"code"),e(56,"danger"),t()(),n(57,"td"),e(58,"This color signifies dangerous or destructive actions."),t()(),n(59,"tr")(60,"td")(61,"ard-button",8),e(62,"Button"),t()(),n(63,"td")(64,"code"),e(65,"warn"),t()(),n(66,"td"),e(67,"This color signifies a warning. Should be used for destructive actions of lower severity."),t()(),n(68,"tr")(69,"td")(70,"ard-button",9),e(71,"Button"),t()(),n(72,"td")(73,"code"),e(74,"success"),t()(),n(75,"td"),e(76,"This color signifies positive actions."),t()(),n(77,"tr")(78,"td")(79,"ard-button",10),e(80,"Button"),t()(),n(81,"td")(82,"code"),e(83,"info"),t()(),n(84,"td"),e(85,"This color should be used when paired with an informational message."),t()()()(),n(86,"app-h3"),e(87,"Appearances"),t(),n(88,"p"),e(89,"Appearances control how a component looks."),t(),n(90,"table",3)(91,"thead")(92,"tr"),a(93,"th"),n(94,"th"),e(95,"Appearance"),t(),n(96,"th"),e(97,"Description"),t()()(),n(98,"tbody")(99,"tr")(100,"td")(101,"ard-button",11),e(102,"Button"),t()(),n(103,"td")(104,"code"),e(105,"transparent"),t()(),n(106,"td"),e(107,"Should be used for lowest priority actions, especially when paired with multiple options."),t()(),n(108,"tr")(109,"td")(110,"ard-button",12),e(111,"Button"),t()(),n(112,"td")(113,"code"),e(114,"raised"),t()(),n(115,"td"),e(116," Should be used for medium-priority actions, with less visual emphasis that the "),n(117,"code"),e(118,"raised-strong"),t(),e(119," version. "),t()(),n(120,"tr")(121,"td")(122,"ard-button",13),e(123,"Button"),t()(),n(124,"td")(125,"code"),e(126,"raised-strong"),t()(),n(127,"td"),e(128,"Should be used for high-priority actions or final actions."),t()(),n(129,"tr")(130,"td")(131,"ard-button",14),e(132,"Button"),t()(),n(133,"td")(134,"code"),e(135,"outlined"),t()(),n(136,"td"),e(137,"Should be used for medium-priority actions or when elevation is undesired."),t()(),n(138,"tr")(139,"td")(140,"ard-button",15),e(141,"Button"),t()(),n(142,"td")(143,"code"),e(144,"outlined-strong"),t()(),n(145,"td"),e(146," Should be used for medium-priority actions that should draw higher attention before clicking. Usually for destructive actions. "),t()(),n(147,"tr")(148,"td")(149,"ard-button",16),e(150,"Button"),t()(),n(151,"td")(152,"code"),e(153,"flat"),t()(),n(154,"td"),e(155," Should be used for high-priority actions. Version of the "),n(156,"code"),e(157,"raised-strong"),t(),e(158," button but without elevation. "),t()()()(),n(159,"app-h3"),e(160,"Variants"),t(),n(161,"p"),e(162,"Variants control how a button is shaped."),t(),n(163,"p"),e(164," The variants "),n(165,"code"),e(166,"rounded"),t(),e(167," and "),n(168,"code"),e(169,"sharp"),t(),e(170," should generally not be used interchangeably in one app. "),t(),n(171,"table",3)(172,"thead")(173,"tr"),a(174,"th"),n(175,"th"),e(176,"Appearance"),t(),n(177,"th"),e(178,"Description"),t()()(),n(179,"tbody")(180,"tr")(181,"td")(182,"ard-button",17),e(183,"Button"),t()(),n(184,"td")(185,"code"),e(186,"rounded"),t()(),n(187,"td"),e(188,"Variant with slightly rounded corners."),t()(),n(189,"tr")(190,"td")(191,"ard-button",18),e(192,"Button"),t()(),n(193,"td")(194,"code"),e(195,"pill"),t()(),n(196,"td"),e(197,"Variant with fully rounded ends."),t()(),n(198,"tr")(199,"td")(200,"ard-button",19),e(201,"Button"),t()(),n(202,"td")(203,"code"),e(204,"sharp"),t()(),n(205,"td"),e(206,"Variant with sharp, non-rounded corners."),t()()()()(),n(207,"section")(208,"app-h2"),e(209,"Disabled buttons"),t(),n(210,"p"),e(211," Button can be disabled using the "),n(212,"code"),e(213,"disabled"),t(),e(214," property. The property can accept a standard boolean value, or can be used without a value as a shorthand. "),t(),n(215,"p"),e(216," By default, disabled buttons have the "),n(217,"code"),e(218,"pointer-events: none"),t(),e(219," style applied. If the use case requires the button to still allow pointer events (e.g. hover), the "),n(220,"code"),e(221,"pointerEventsWhenDisabled"),t(),e(222," property can be set. This brings back standard pointer events and also applies "),n(223,"code"),e(224,"cursor: not-allowed"),t(),e(225," style. This is useful for example when trying to add a tooltip to the button. "),t(),n(226,"p")(227,"strong"),e(228,"Notice!"),t(),e(229," When "),n(230,"code"),e(231,"pointerEventsWhenDisabled"),t(),e(232," is set to true, the button will be able to be clicked, and will emit click events, so make sure the event listener handles that correctly! The button won't be keyboard-focusable though. "),t(),a(233,"app-code-example",20),t(),n(234,"section")(235,"app-h2"),e(236,"Adding icons"),t(),n(237,"p"),e(238," Buttons support adding Material Icons to Ardium UI buttons. Simply specify the name of the icon in the "),n(239,"code"),e(240,"icon"),t(),e(241," field and it will be added to the button. "),t(),n(242,"p"),e(243," The icon position can additionally be controlled using the "),n(244,"code"),e(245,"alignIcon"),t(),e(246," property, which can be set to either "),n(247,"code"),e(248,"'left'"),t(),e(249," or "),n(250,"code"),e(251,"'right'"),t(),e(252,". "),t(),a(253,"app-code-example",21),n(254,"p"),e(255," Buttons can also be made vertical, with the icon being on top or bottom of the button. Use the "),n(256,"code"),e(257,"vertical"),t(),e(258," property for that. Aligning the icon to the left will result in the icon being on top, aligning to the right will result in the icon being on the bottom. "),t()(),n(259,"section")(260,"app-h2"),e(261,"Providing default values"),t(),n(262,"p"),e(263," Default values of all button properties can be provided using the "),n(264,"code"),e(265,"provideButtonDefaults"),t(),e(266," provider function. It takes an object of new default values, and returns a provider token. "),t(),a(267,"app-code",22),t(),n(268,"section")(269,"app-h2"),e(270,"See also"),t(),n(271,"ul")(272,"li")(273,"a",23),e(274,"Floating Action Button (FAB)"),t()(),n(275,"li")(276,"a",24),e(277,"Icon Button"),t()()()()),l&2&&(d(3),r("data",s.ButtonBasicExampleData)("isCodeShown",!1),d(),r("styles",h(7,te)),d(229),r("data",s.ButtonDisabledExampleData),d(20),r("data",s.ButtonIconExampleData)("isCodeShown",!1),d(14),r("code",s.providingDefaultValuesExampleCode))},dependencies:[S,P,v,g,D,E,y,f,F,T,C,A],styles:[".button-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-of-type{width:5rem}.button-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-of-type(2){min-width:max-content}"]})}}return o})();var Y=(()=>{class o{constructor(){this.routeData=K()}static{this.\u0275fac=function(l){return new(l||o)}}static{this.\u0275cmp=m({type:o,selectors:[["components-home-page"]],decls:1,vars:1,consts:[["module","components","topText","Ardium UI offers a wide variety of UI components and directives",3,"data"]],template:function(l,s){l&1&&a(0,"app-home-page",0),l&2&&r("data",s.routeData)},dependencies:[W],encapsulation:2})}}return o})();var $={name:"KBD",modules:[{name:"ArdiumKbdModule",exports:["ArdiumKbdComponent","ArdiumKbdDirective","ArdiumKbdPipe"]},{name:"ArdiumKbdShortcutModule",exports:"ArdiumKbdShortcutComponent"}],components:[{name:"ArdiumKbdComponent",selector:"ard-kbd",exportedFrom:"ArdiumKbdModule",inputs:[{name:"key",type:"string",default:"empty string",description:"Key code of the key to be displayed. Has priority over the key code defined as ng-content."},u(c({},B),{name:"full",description:"Whether the key name should be displayed in full version."}),x("Theme appearance of the KBD.",b.Filled)],contentChildren:[{selector:null,description:`Key code of the key to be displayed. If <code>[key]</code> attribute is defined, ng-content will be ignored.

Note: this is not suitable for dynamic values. Use <code>[key]</code> instead.`}]},{name:"ArdiumKbdShortcutComponent",selector:"ard-kbd-shortcut",exportedFrom:"ArdiumKbdShortcutModule",inputs:[{name:"keys",type:"array-like",default:"empty array",description:'An array of key codes of the keys to be displayed. Accepts either an array of key codes as strings, or a string of key codes separated by any of: "<code>,</code>", "<code> </code>", or "<code>+</code>". Has priority over the key codes defined as ng-content.'},u(c({},B),{name:"full",description:"Whether the key name should be displayed in full version."}),x("Theme appearance of the KBD.",b.Filled)],contentChildren:[{selector:null,description:`A string of key codes of the keys to be displayed. Key codes must be separated by any of: "<code>,</code>", "<code title="space character"> </code>", or "<code>+</code>". If <code>[keys]</code> attribute is defined, ng-content will be ignored.

Note: this is not suitable for dynamic values. Use <code>[keys]</code> instead.`}]}],directives:[{name:"ArdiumKbdDirective",selector:"[ardKbd]",description:"Applies the KBD styling to any HTML element.",exportedFrom:"ArdiumKbdModule",inputs:[x("Theme appearance of the KBD.",b.Filled)]}],pipes:[{name:"ArdiumKbdPipe",exportedFrom:"ArdiumKbdModule",selector:"kbd",description:"Transforms a key code into a human-readable string.",params:[{name:"full",type:"boolean",description:"Whether the key name should be displayed in full version.",default:"false"}]}]};var G={name:"KBD",exceptions:[{name:"ArdiumKbdComponent",exceptions:[{code:"ARD-FT5030",exceptionText:"Using <ard-kbd> without specifying the [key] field is not allowed.",description:["When using the <code>ArdiumKbdComponent</code>, either the node content or the <code>[key]</code> field must be defined.","To resolve this issue define the node content if the KBD value is not supposed to change, or use the <code>[key]</code> input otherwise."]}]}]};var ne=()=>["ArdiumKbdShortcutModule"],ie=()=>["kbd-shortcut",!0],ae=o=>["kbd",o],J=(()=>{class o{constructor(){this.KbdBasicExampleData=_,this.KbdTranslationExampleData=V,this.KbdFullExampleData=O,this.KbdDynamicExampleData=U,this.KbdShortcutExampleData=L,this.KbdAppearancesExampleData=H,this.KbdDirectiveExampleData=N}static{this.\u0275fac=function(l){return new(l||o)}}static{this.\u0275cmp=m({type:o,selectors:[["kbd-page"]],decls:110,vars:14,consts:[["pageTitle","KBD (keyboard)"],["heading","Basic KBD",3,"data","isCodeShown"],["moduleName","ArdiumKbdModule",3,"otherModuleNames","styles"],["heading","KBD Code Translations",3,"data"],["heading","KBD Full Key Names",3,"data"],["heading","Dynamic KBD",3,"data"],["heading","Basic KBD Shortcut",3,"data"],["heading","KBD Appearances",3,"data"],["heading","KBD Directive",3,"data"]],template:function(l,s){l&1&&(n(0,"app-introduction",0)(1,"p"),e(2," The KBD (keyboard) component can be used to indicate user's keyboard input inside elements such as inputs, tables, text, and other. "),t(),a(3,"app-code-example",1),t(),a(4,"app-prerequisites",2),n(5,"section")(6,"app-h2"),e(7,"Automatic KeyboardEvent translation"),t(),n(8,"p"),e(9," KBD provides a feature that automatically converts "),n(10,"code"),e(11,"KeyboardEvent.code"),t(),e(12," into a human-readable format. "),t(),n(13,"p"),e(14," This feature is case sensitive, so if you type it out by hand, remember to use PascalCase, just like KeyboardEvent does. "),t(),a(15,"app-code-example",3),t(),n(16,"section")(17,"app-h2"),e(18,"Full key names"),t(),n(19,"p"),e(20," By default, KBD will display a shortened name of the key. This can be changed using the "),n(21,"code"),e(22,"full"),t(),e(23," attribute. In some cases, however, there is no difference. "),t(),a(24,"app-code-example",4),t(),n(25,"section")(26,"app-h2"),e(27,"Dynamic key values"),t(),n(28,"p"),e(29,"KBD allows to set the displayed key dynamically using the "),n(30,"code"),e(31,"key"),t(),e(32," attribute."),t(),a(33,"app-code-example",5),t(),n(34,"section")(35,"app-h2"),e(36,"Keyboard shortcuts"),t(),n(37,"p"),e(38," Ardium UI exposes the "),n(39,"code"),e(40,"ArdiumKbdShortcut"),t(),e(41," component which streamlines the process of displaying keyboard shortcuts. "),t(),n(42,"p"),e(43," KBD Shortcut component can receive information about the shortcut either as the content, or using the "),n(44,"code"),e(45,"keys"),t(),e(46," attribute. Keys can be provided as a string of valid key names separated using a plus, a space, or a comma. If using the "),n(47,"code"),e(48,"keys"),t(),e(49," attribute, an array of key names can also be used. If changing the shortcut data dynamically is needed, "),n(50,"code"),e(51,"keys"),t(),e(52," attribute must be used. "),t(),n(53,"p"),e(54,"KBD Shortcut allows to use all the same customization options as the standard KBD."),t(),a(55,"app-code-example",6),t(),n(56,"section")(57,"app-h2"),e(58,"KBD appearances"),t(),n(59,"p"),e(60,"KBD and KBD Shortcut components can be customized using the "),n(61,"code"),e(62,"appearance"),t(),e(63," attribute."),t(),a(64,"app-code-example",7),n(65,"app-h3"),e(66,"KBD directive"),t(),n(67,"p"),e(68," If the use case doesn't need the translation functionality and only the styling is needed, the "),n(69,"code"),e(70,"ardKbd"),t(),e(71," can be used. The appearance can be chosen using the "),n(72,"code"),e(73,"ardKbdAppearance"),t()(),a(74,"app-code-example",8),t(),n(75,"section")(76,"app-h2"),e(77,"Accessibility and Best Practises"),t(),n(78,"p")(79,"code"),e(80,"ArdiumKbdComponent"),t(),e(81," and "),n(82,"code"),e(83,"ArdiumKbdShortcutComponent"),t(),e(84," both use the semantic "),n(85,"code"),e(86,"<kbd>"),t(),e(87," element to ensure proper accessibility. There are some best practises advised: "),t(),n(88,"ul")(89,"li"),e(90," The "),n(91,"code"),e(92,"<ard-kbd>"),t(),e(93," component should only be used to indicate keyboard input. Don't use it to mark up other types of content, as this can lead to confusion for users and affect accessibility. "),t(),n(94,"li"),e(95," Don't use the "),n(96,"code"),e(97,"<ard-kbd>"),t(),e(98," component just for styling or decoration. Only use it to markup text that represents actual keyboard input. "),t(),n(99,"li"),e(100," Always provide additional context when using "),n(101,"code"),e(102,"<ard-kbd>"),t(),e(103," component, whether be using standard text or by applying the "),n(104,"code"),e(105,"aria-label"),t(),e(106," or "),n(107,"code"),e(108,"aria-labelledby"),t(),e(109," attributes. "),t()()()),l&2&&(d(3),r("data",s.KbdBasicExampleData)("isCodeShown",!1),d(),r("otherModuleNames",h(10,ne))("styles",k(12,ae,h(11,ie))),d(11),r("data",s.KbdTranslationExampleData),d(9),r("data",s.KbdFullExampleData),d(9),r("data",s.KbdDynamicExampleData),d(22),r("data",s.KbdShortcutExampleData),d(9),r("data",s.KbdAppearancesExampleData),d(10),r("data",s.KbdDirectiveExampleData))},dependencies:[S,v,g,D,E,y,f],encapsulation:2})}}return o})();var K=()=>[w("kbd","KBD","Presents a keyboard key in an accessible way.",J,$,G,"assets/kbd.png","Data Display"),i("badge","Badge","A small indicator that can be overlaid on another object.","Data Display"),w("button","Button","A set of buttons with a wide range of variants and styles.",j,z,void 0,"assets/button.png","Buttons"),i("fab","Floating Action Button","Performs the primary or most common action on the screen.","Buttons"),i("icon-button","Icon Button","For creating clickable icons.","Buttons"),i("card","Card","A styled container for pieces of itemized content.","Layout"),i("checkbox","Checkbox","Handles boolean input with an optional indeterminate mode.","Form Elements"),i("checkbox-list","Checkbox List","Allows the user to select multiple items from a list.","Form Elements"),i("chips","Chips","Presents a piece of text as a small, contained element.","Data Display"),i("color-display","Color Display","Presents a color code with a small preview.","Data Display"),i("dialogs","Dialogs","Configurable modal that displays dynamic content.","Popups"),i("divider","Divider","A horizontal or vertical visual divider.","Layout"),i("file-input","File Input","A form component for uploading files.","Form Elements"),i("form-field-frame","Form Field Frame","Wraps input fields so they are displayed consistently.","Form Elements"),i("icon","Icon","Renders a specified Material Icon.","Data Display"),i("simple-input","Simple Input","Simple version of the more advanced text input.","Form Elements"),i("input","Input","Text input with autocomplete and suggestion options.","Form Elements"),i("number-input","Number Input","Text field for inputing numbers in a handy way.","Form Elements"),i("hex-input","Hex Input","Text field for inputing hexadecimal strings.","Form Elements"),i("date-input","Date Input","Text field and calendar combined into one.","Form Elements"),i("password-input","Password Input","Text field for inputing passwords.","Form Elements"),i("progress-bar","Progress Bar","A linear progress or state indicator.","Feedback"),i("progress-circle","Progress Circle","A circular progress indicator.","Feedback"),i("radio","Radio","Allows user to select one option from a group.","Form Elements"),i("segment","Segment","A group of on/off toggles.","Form Elements"),i("select","Select","Allows user to select one or more options using a dropdown.","Form Elements"),i("slide-toggle","Slide Toggle","Captures boolean values as a clickable switch.","Form Elements"),i("slider","Slider","Allows user to input a value by dragging along a slider.","Form Elements"),i("snackbar","Snackbar","Displays short messages as uninvasive alerts.","Popups"),i("spinner","Spinner","Represents loading activity.","Feedback"),i("star","Star","Shows a star icon in one of three states","Stars"),i("star-display","Star Display","Shows an array of star icons.","Stars"),i("star-button","Star Button","Clickable button with a star icon for inputing ratings.","Stars"),i("star-input","Star Input","For inputting ratings in stars","Stars"),i("statebox","Statebox","Extension of a checkbox that allows custom states and values.","Form Elements"),i("text-list","Text List","Concatenates strings into text-based inline lists.","Data Display"),i("tabber","Tabber","Switches between multiple content tabs.","Layout"),i("table","Table","Shows data in an organized way.","Data Display")],He=[{path:"",component:Y,title:"UI Components :: Ardium UI Docs"},...K().map(o=>u(c({},o),{title:`${o.name} :: Ardium UI Docs`}))];export{K as a,He as b};
