import{$ as ce,C as K,D as j,E as U,F as N,G as V,H as W,I as _,J as G,K as Q,L as J,M as $,N as X,O as Z,P as Y,Q as ee,R as te,S as ie,T as ne,U as oe,V as ae,W as re,X as le,Y as de,Z as pe,_ as me,aa as ue,ba as he,i as w,j as m,k as C,l as c,m as B,n as g,p as z,q as b,r as f,s as u,t as S,u as h}from"./chunk-2WLRODUZ.js";import{Ba as L,Ca as D,Da as F,F as H,Fb as k,Gb as A,I as l,Nb as se,Q as p,Z as r,ga as i,ha as t,ia as s,pa as I,qa as M,ya as e,z as T}from"./chunk-KS3TIRFP.js";import{a as O,b as q}from"./chunk-FDERIQAA.js";var fe={name:"Click outisde",modules:[{name:"ArdiumClickOutsideModule",exports:"ArdiumClickOutsideDirective"}],directives:[{name:"ArdiumClickOutsideDirective",description:"Detects when the user clicks or touches outside a given element.",exportedFrom:"ArdiumClickOutsideModule",selector:"[ardClickOutside]",outputs:[{name:"ardClickOutside",description:"Fired when the user clicks or touches outside of a given element.",type:"MouseEvent"}]}]};var ye=(()=>{class n{constructor(){this.ClickOutsideExampleData=K}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["click-outside-page"]],decls:44,vars:2,consts:[["pageTitle","Click outisde"],["moduleName","ArdiumClickOutsideModule"],["heading","Outside click counter",3,"data","isCodeShown"],["href","https://developer.mozilla.org/en-US/docs/Web/API/Node/contains","target","_blank"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2,"Directive for detecting when the user clicks outside a given element."),t()(),s(3,"app-prerequisites",1),i(4,"section")(5,"app-h2"),e(6,"Listening to the event"),t(),i(7,"p")(8,"code"),e(9,"ClickOutisdeDirective"),t(),e(10," provides an event emitter "),i(11,"code"),e(12,"(ardClickOutside)"),t(),e(13," that emits a click event or a touch event every time the user clicks "),i(14,"i"),e(15,"outside"),t(),e(16," of a given element. "),t(),i(17,"p"),e(18," Internally the directive listens to "),i(19,"code"),e(20,"mousedown"),t(),e(21," and "),i(22,"code"),e(23,"touchstart"),t(),e(24," events on the whole "),i(25,"code"),e(26,"document"),t(),e(27," element. In that case stopping event propagation might not prove useful in standard circumstances. If the event needs to be stopped from firing, define an event listener with "),i(28,"code"),e(29,"capture"),t(),e(30," option set to "),i(31,"code"),e(32,"true"),t(),e(33," and stop it there. "),t(),s(34,"app-code-example",2),t(),i(35,"section")(36,"app-h2"),e(37,"Performance considerations"),t(),i(38,"p"),e(39," The directive internally uses "),i(40,"a",3)(41,"code"),e(42,"Node.contains()"),t()(),e(43,", which, when executed repeatedly on particularly large DOM trees, may lead to performance issues. It's recommended to avoid using the directive if more than 30 clicks per second are expected, as performance may degrade depending on the user's device. For most cases with fewer interactions, no significant issues should arise. "),t()()),o&2&&(l(34),r("data",a.ClickOutsideExampleData)("isCodeShown",!1))},dependencies:[f,h,u,S,c,m],encapsulation:2})}}return n})();var ge={name:"Coercion",functions:[{name:"coerceArrayProperty",description:'Coerces a value to an array of trimmed non-empty strings. Any input that is not an array, <code>null</code> or <code>undefined</code> will be turned into a string using <code>String()</code> and split into an array with the given separator. <code>null</code>, <code>undefined</code>, and <code>""</code> will result in an empty array.',returnType:"string[]",params:[{name:"value",description:"The value to be coerced.",type:"any",required:!0},{name:"separator",description:"The separator used to split the string with.",type:"string | RegExp",required:!1,default:'","'}]},{name:"coerceBooleanProperty",description:"Coerces a data-bound value (typically a string) to a boolean.",returnType:"boolean",params:[{name:"value",description:"The value to be coerced.",required:!0,type:"any"}]},{name:"coerceDateProperty",description:"Coerces a data-bound value (typically a string) to a Date.",returnType:"Date | T",typeParams:[{name:"T",description:"The type of the fallback value to be used.",required:!1,type:"any",default:"Infered from the <code>fallback</code> parameter."}],params:[{name:"value",description:"The value to be coerced.",required:!0,type:"any"},{name:"fallback",description:"The value to use if the coercion fails.",required:!0,type:"T (infered)"}]},{name:"coerceNumberProperty",description:"Coerces a data-bound value (typically a string) to a number.",overloads:[{description:"Coerces a data-bound value (typically a string) to a number.",returnType:"number | undefined",params:[{name:"value",description:"The value to be coerced.",required:!0,type:"any"}]},{description:"Coerces a data-bound value (typically a string) to a number.",returnType:"number | undefined",typeParams:[{name:"D",description:"The type of the fallback value to be used.",required:!1,type:"any",default:"Infered from the <code>fallback</code> parameter."}],params:[{name:"value",description:"The value to be coerced.",required:!0,type:"any"},{name:"fallback",description:"The value to use if the coercion fails.",required:!0,type:"D (infered)"}]}]}]};var ve=(()=>{class n{constructor(){this.CoercionBooleanExampleData=j,this.CoercionNumberExampleData=N,this.CoercionDateExampleData=U,this.CoercionUsefulnessExampleData=V,this.arrayExampleCode=`// input         ->  output
null             ->  []
""               ->  []
"a,b,c"          ->  ["a", "b", "c"]
"1,2,3"          ->  ["1", "2", "3"]
["a", "b ", ""]  ->  ["a", "b"]
[1, [2, 3]]      ->  ["1", "2,3"]`}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["coercion-page"]],decls:91,vars:5,consts:[["pageTitle","Coercion"],["heading","Boolean coercion","initialTab","my-button.component.ts",3,"data"],["heading","Number coercion","initialTab","my-button.component.ts",3,"data"],["heading","Date coercion","initialTab","my-calendar.component.ts",3,"data"],["language","typescript","styled","",3,"code"],["heading","Coercion usefulness examples","nonExpandable","",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2,"Utility functions for coercing "),i(3,"code"),e(4,"@Input"),t(),e(5,"s into specific types."),t()(),i(6,"section")(7,"app-h2"),e(8,"Coercing boolean values"),t(),i(9,"p")(10,"code"),e(11,"coerceBooleanProperty"),t(),e(12," function provides a way to coerce any value into a boolean."),t(),i(13,"p"),e(14," Almost any value provided will turn into "),i(15,"code"),e(16,"true"),t(),e(17,". Only the values "),i(18,"code"),e(19,"undefined"),t(),e(20,", "),i(21,"code"),e(22,"null"),t(),e(23,", and the string "),i(24,"code"),e(25,'"false"'),t(),e(26," will result in "),i(27,"code"),e(28,"false"),t(),e(29,". "),t(),s(30,"app-code-example",1),t(),i(31,"section")(32,"app-h2"),e(33,"Coercing number values"),t(),i(34,"p")(35,"code"),e(36,"coerceNumberProperty"),t(),e(37," function provides a way to coerce any value into a number. A fallback value can be provided, to use when the coercion fails. "),t(),i(38,"p"),e(39," This function will try to convert the provided value into a number using the "),i(40,"code"),e(41,"Number()"),t(),e(42," function. If the result is "),i(43,"code"),e(44,"NaN"),t(),e(45,", the fallback value will be used. "),t(),i(46,"p"),e(47,"By default, the fallback value is "),i(48,"code"),e(49,"undefined"),t(),e(50,", but any value can be used."),t(),s(51,"app-code-example",2),t(),i(52,"section")(53,"app-h2"),e(54,"Coercing date values"),t(),i(55,"p")(56,"code"),e(57,"coerceDateProperty"),t(),e(58," function provides a way to coerce any value into a Date object. A fallback value can be provided, to use when the coercion fails. "),t(),i(59,"p"),e(60," This function will try to convert the provided value into a Date object using its constructor. If the result is not a valid date, the fallback value will be used. There is also a special case: if the value is "),i(61,"code"),e(62,'"now"'),t(),e(63," (case insensitive), it will be coerced into the current date. "),t(),i(64,"p"),e(65,"With this function the fallback must always be specified, and can be any value."),t(),s(66,"app-code-example",3),t(),i(67,"section")(68,"app-h2"),e(69,"Coercing array values"),t(),i(70,"p")(71,"code"),e(72,"coerceArrayProperty"),t(),e(73," function provides a way to coerce any value into an array of strings, with the option to specify the separator to be used (defaults to a comma). "),t(),i(74,"p"),e(75," This function will try to convert the provided value into an array. If the value is already an array, all its values will be converted into strings and trimmed. If the value is a string, it will be split using the provided separator, and all resulting strings will be trimmed. Any empty strings will be removed. "),t(),i(76,"p"),e(77,"Providing "),i(78,"code"),e(79,"undefined"),t(),e(80,", "),i(81,"code"),e(82,"null"),t(),e(83,", or an empty string will result in an empty array."),t(),s(84,"app-code",4),t(),i(85,"section")(86,"app-h2"),e(87,"Why use coercion?"),t(),i(88,"p"),e(89," Coercion is mainly used to reduce the amount of code that needs to be typed. It simplifies how input porperty values can be passed, allowing for strings to be used instead of proper types. A few examples can be found below. "),t(),s(90,"app-code-example",5),t()),o&2&&(l(30),r("data",a.CoercionBooleanExampleData),l(21),r("data",a.CoercionNumberExampleData),l(15),r("data",a.CoercionDateExampleData),l(18),r("code",a.arrayExampleCode),l(6),r("data",a.CoercionUsefulnessExampleData))},dependencies:[w,f,h,u,c,m],encapsulation:2})}}return n})();var xe={name:"Custom signals",interfaces:[{name:"PersistentSignal",extends:"WritableSignal<T>",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"method",description:"The method of persistent storage.",type:"PersistentStorageMethod"},{name:"key",description:"The key used to persist the value under.",type:"string"}],methods:[{name:"clear()",description:"Sets the signal value to <code>null</code> and removes the value from the persistent storage.",returnType:"void"}]},{name:"PersistentSignalOptions",description:"The object containing the options when creating a persistent signal.",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"name",type:"string",description:"The name of the key to store the value under.</p><p>Required."},{name:"method",type:"PersistentStorageMethod",description:"The type of persistent storage to use.</p><p>Required."},{name:"expires",type:"Date | string | undefined",description:"The expiry date of the cookie in UTC date string format. Only used if the storage method is set to cookies, otherwise ignored."},{name:"maxAge",type:"number | undefined",description:"The cookie's maximum age in seconds. Only used if the storage method is set to cookies, otherwise ignored."},{name:"path",type:"string | undefined",description:"The cookie's path attribute. Only used if the storage method is set to cookies, otherwise ignored."},{name:"serialize",type:"(value: T | null) => string | null",description:"The function to use to serialize the value (prefered type -> string). If used, the <code>deserialize</code> function has to be specified as well."},{name:"deserialize",type:"(value: string) => T | null",description:"The function to use to deserialize the value (string -> prefered type). If used, the <code>serialize</code> function has to be specified as well."}]},{name:"QueryParamSignal",extends:"WritableSignal<T>",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"paramName",description:"The name of the URL query param to be used.",type:"string"}],methods:[{name:"clear()",description:"Sets the signal value to <code>null</code> and removes the URL query param.",returnType:"void"}]},{name:"QueryParamSignalOptions",description:"The object containing the options when creating a query param signal.",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"paramName",type:"string",description:"The name of the param to store the value under.</p><p>Required."},{name:"serialize",type:"(value: T | null) => string | null",description:"The function to use to serialize the value (prefered type -> string). If used, the <code>deserialize</code> function has to be specified as well."},{name:"deserialize",type:"(value: string) => T | null",description:"The function to use to deserialize the value (string -> prefered type). If used, the <code>serialize</code> function has to be specified as well."}]},{name:"DebouncedSignal",extends:"WritableSignal<T>",typeParams:[{name:"T",type:"any",description:"The type of the value to be stored.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"debounceTime",description:"The debounce period of the signal.",type:"number"}]},{name:"ThrottledSignal",extends:"WritableSignal<T>",typeParams:[{name:"T",type:"any",description:"The type of the value to be stored.",required:!1,default:"implicit type based on the initial value"}],properties:[{name:"throttleTime",description:"The throttle period of the signal.",type:"number"}]}],functions:[{name:"persistentSignal",description:"Creates a <code>WritableSignal</code> that persists its value using the specified storage method.",returnType:"PersistentSignal<T>",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],params:[{name:"initialValue",type:"T | null",description:"The initial value for the signal. Will only be used if there is no value in the persistent storage.",required:!0},{name:"options",type:"PersistentSignalOptions<T>",description:"The configuration options for the signal.",required:!0}]},{name:"queryParamSignal",description:"Creates a <code>WritableSignal</code> that synchronizes its value with a URL search param.",returnType:"QueryParamSignal<T>",typeParams:[{name:"T",type:"any",description:"The prefered type of the signal. Should only be used if the signal is supposed to be serializable.",required:!1,default:"implicit type based on the initial value"}],params:[{name:"initialValue",type:"T | null",description:"The initial value for the signal. Will only be used if the specified param is not found.",required:!0},{name:"optionsOrParam",type:"string | QueryParamSignalOptions<T>",description:"Can either be a string specifying the param name to use or an object containing the configuration options for the signal.",required:!0}]},{name:"debouncedSignal",description:"Creates a <code>WritableSignal</code> that delays updates to its value based on a specified debounce time.",returnType:"QueryParamSignal<T>",typeParams:[{name:"T",type:"any",description:"The type of the value to be stored.",required:!1,default:"implicit type based on the initial value"}],params:[{name:"initialValue",type:"T | null",description:"The initial value for the signal.",required:!0},{name:"debounceTime",type:"number",description:"The debounce period, in milliseconds.",required:!0}]},{name:"throttledSignal",description:"Creates a <code>WritableSignal</code> that limits updates to its value based on a specified throttle interval.",returnType:"QueryParamSignal<T>",typeParams:[{name:"T",type:"any",description:"The type of the value to be stored.",required:!1,default:"implicit type based on the initial value"}],params:[{name:"initialValue",type:"T | null",description:"The initial value for the signal.",required:!0},{name:"throttleTime",type:"number",description:"The throttle interval, in milliseconds.",required:!0}]}],enums:[{name:"PersistentStorageMethod",description:"An object-based enum containing the available types of persistent storage used by the persistent signal.",definition:`export const PersistentStorageMethod = {
  Cookies: 'cookies',
  LocalStorage: 'local-storage',
  SessionStorage: 'session-storage',
} as const;
export type PersistentStorageMethod = (typeof PersistentStorageMethod)[keyof typeof PersistentStorageMethod];`}]};var Se=(()=>{class n{constructor(){this.PersistentSignalExampleData=G,this.PersistentSignalLocalStorageExampleData=Q,this.PersistentSignalCookiesExampleData=_,this.PersistentSignalSerializationExampleData=J,this.QueryParamSignalExampleData=$,this.QueryParamSignalSerializationExampleData=X,this.DebouncedSignalExampleData=W,this.ThrottledSignalExampleData=Z}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["custom-signals-page"]],decls:186,vars:8,consts:[["pageTitle","Custom signals"],["heading","Basic Persistent Signal","initialTab","ts",3,"data"],["heading","Persistent Signal Using Local/Session Storage","initialTab","ts",3,"data"],["href","https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie#write_a_new_cookie","target","_blank"],["initialTab","ts","heading","Persistent Signal Using Cookies",3,"data"],["heading","Persistent Signal with Serialization",3,"data"],["heading","Basic query param signal","initialTab","ts",3,"data"],["heading","Query Param Signal with Serialization",3,"data"],["src","/ardium-ui-docs/assets/debounced.svg","alt","Illustration visualizing the debounced signal value handling"],["heading","Basic Debounced Signal","initialTab","ts",3,"data"],["src","/ardium-ui-docs/assets/throttled.svg","alt","Illustration visualizing the throttled signal value handling"],["heading","Basic Throttled Signal","initialTab","ts",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2,"A set of custom, specialized signals made for very specific tasks."),t()(),i(3,"section")(4,"app-h2"),e(5,"Persistent Signal"),t(),i(6,"p"),e(7," The "),i(8,"code"),e(9,"persistentSignal"),t(),e(10," function creates a "),i(11,"code"),e(12,"WritableSignal"),t(),e(13," that stores its value in local storage, session storage, or cookies. By default, it only supports string values, but you can define custom serialization and deserialization methods to handle other types. "),t(),i(14,"p"),e(15," When the signal is initialized, it attempts to read the value associated with the given key from the specified storage. If no value is found, the initial value is saved in both the signal and the storage. You can access the chosen storage method later via the read-only "),i(16,"code"),e(17,"method"),t(),e(18," property. "),t(),i(19,"p"),e(20," Whenever the signal value is updated using the "),i(21,"code"),e(22,"set()"),t(),e(23," or "),i(24,"code"),e(25,"update()"),t(),e(26," methods, the change is synced to the storage. The signal also provides a "),i(27,"code"),e(28,"clear()"),t(),e(29," method that sets the value to "),i(30,"code"),e(31,"null"),t(),e(32," and removes the stored value. "),t(),s(33,"app-code-example",1),i(34,"app-h3"),e(35,"Local Storage and Session Storage"),t(),i(36,"p"),e(37,"For local or session storage, only the key name needs to be defined\u2014no additional settings are required."),t(),s(38,"app-code-example",2),i(39,"app-h3"),e(40,"Cookies"),t(),i(41,"p"),e(42,"If using cookies to persist the signal value, the following options can be specified:"),t(),i(43,"ul")(44,"li")(45,"code"),e(46,"expires"),t(),e(47,": Sets the expiry date of the cookie, either as a Date object or a UTC date string."),t(),i(48,"li")(49,"code"),e(50,"maxAge"),t(),e(51,": Specifies the cookie's maximum age in seconds."),t(),i(52,"li")(53,"code"),e(54,"path"),t(),e(55,": Defines the value of the cookie's "),i(56,"code"),e(57,"Path"),t(),e(58," attribute."),t()(),i(59,"p"),e(60," For more details on cookie options, see the "),i(61,"a",3),e(62," MDN documentation on cookies "),t(),e(63,". "),t(),s(64,"app-code-example",4),i(65,"app-h3"),e(66,"Serialization and Deserialization"),t(),i(67,"p"),e(68," Custom "),i(69,"code"),e(70,"serialize()"),t(),e(71," and "),i(72,"code"),e(73,"deserialize()"),t(),e(74," functions can be provided when creating a persistent signal, allowing you to store values other than strings, such as numbers or booleans. "),t(),i(75,"p"),e(76," The "),i(77,"code"),e(78,"serialize()"),t(),e(79," function converts the value to a string for storage, while "),i(80,"code"),e(81,"deserialize()"),t(),e(82," is called at initialization to convert the stored string back to the desired type. "),t(),s(83,"app-code-example",5),t(),i(84,"section")(85,"app-h2"),e(86,"Query Param Signal"),t(),i(87,"p")(88,"code"),e(89,"queryParamSignal"),t(),e(90," function creates a "),i(91,"code"),e(92,"WritableSignal"),t(),e(93," that persists its value in an URL query param. By default only strings are allowed as a value, but custom serialization and deserialization methods can be defined. "),t(),i(94,"p"),e(95," When the signal is created it will try reading the value associated with the given key from the URL query params. If no value is found, the initial value will be saved in both the signal and the query param. "),t(),i(96,"p"),e(97," Whenever the signal value is updated using the standard "),i(98,"code"),e(99,"set()"),t(),e(100," or "),i(101,"code"),e(102,"update()"),t(),e(103," methods, the value will be synced in the URL. The signal also provides a "),i(104,"code"),e(105,"clear()"),t(),e(106," method, which sets the value to "),i(107,"code"),e(108,"null"),t(),e(109," and removes the query param. "),t(),s(110,"app-code-example",6),i(111,"app-h3"),e(112,"Serialization and Deserialization"),t(),i(113,"p"),e(114," Custom "),i(115,"code"),e(116,"serialize()"),t(),e(117," and "),i(118,"code"),e(119,"deserialize()"),t(),e(120," functions can be provided when creating a persistent signal, allowing you to store values other than strings, such as numbers or booleans. "),t(),i(121,"p"),e(122," The "),i(123,"code"),e(124,"serialize()"),t(),e(125," function converts the value to a string for storage, while "),i(126,"code"),e(127,"deserialize()"),t(),e(128," is called at initialization to convert the stored string back to the desired type. "),t(),s(129,"app-code-example",7),t(),i(130,"section")(131,"app-h2"),e(132,"Debounced Signal"),t(),i(133,"p"),e(134," The "),i(135,"code"),e(136,"debouncedSignal"),t(),e(137," function creates a "),i(138,"code"),e(139,"WritableSignal"),t(),e(140," that delays updates to its value based on a specified debounce time. The signal will wait for a pause in updates before applying the latest value, which helps prevent frequent changes from being processed too quickly. "),t(),i(141,"p"),e(142," The function takes an initial value and a debounce time (in milliseconds) as parameters. It returns a "),i(143,"code"),e(144,"WritableSignal"),t(),e(145," that behaves like a normal signal but with debounced updates. The signal's "),i(146,"code"),e(147,"set()"),t(),e(148," method will delay setting the value until the debounce period has elapsed since the last change. "),t(),i(149,"p"),e(150," The debounce time can be accessed via the read-only "),i(151,"code"),e(152,"debounceTime"),t(),e(153," property, allowing you to check the debounce period applied to the signal. "),t(),i(154,"p"),e(155," This is useful in scenarios where frequent value changes need to be minimized, such as handling user input in forms or search queries. "),t(),s(156,"img",8)(157,"app-code-example",9),t(),i(158,"section")(159,"app-h2"),e(160,"Throttled Signal"),t(),i(161,"p"),e(162," The "),i(163,"code"),e(164,"throttledSignal"),t(),e(165," function creates a "),i(166,"code"),e(167,"WritableSignal"),t(),e(168," that limits updates to its value based on a specified throttle interval. Instead of processing every update immediately, the signal only updates at most once per throttle period, ignoring additional updates until the interval has passed. "),t(),i(169,"p"),e(170," The function takes an initial value and a throttle interval (in milliseconds) as parameters. It returns a "),i(171,"code"),e(172,"WritableSignal"),t(),e(173," that behaves like a regular signal but with throttled updates. The signal's "),i(174,"code"),e(175,"set()"),t(),e(176," method will apply the value only once per throttle interval, even if multiple updates are requested within that timeframe. The last update before an interval will be applied, and all previous updates will be lost. "),t(),i(177,"p"),e(178," The throttle interval can be accessed via the read-only "),i(179,"code"),e(180,"throttleTime"),t(),e(181," property, allowing you to check the interval duration applied to the signal. "),t(),i(182,"p"),e(183," This is useful in scenarios where high-frequency updates need to be managed efficiently, such as limiting calls to APIs in real-time applications or handling continuous events like scrolling or mouse movement. "),t(),s(184,"img",10)(185,"app-code-example",11),t()),o&2&&(l(33),r("data",a.PersistentSignalExampleData),l(5),r("data",a.PersistentSignalLocalStorageExampleData),l(26),r("data",a.PersistentSignalCookiesExampleData),l(19),r("data",a.PersistentSignalSerializationExampleData),l(27),r("data",a.QueryParamSignalExampleData),l(19),r("data",a.QueryParamSignalSerializationExampleData),l(28),r("data",a.DebouncedSignalExampleData),l(28),r("data",a.ThrottledSignalExampleData))},dependencies:[f,h,u,c,m,C],encapsulation:2})}}return n})();var Ee={name:"Custom Signals",exceptions:[{name:"persistentSignal",exceptions:[{code:"DKT-FT3000",exceptionText:"Both serialize and deserialize must either be both defined or both undefined.",description:["This exceptions is raised if a signal's options object contains only <code>serialize</code> or only <code>deserialize</code> function definitions.","For the signal to work properly, both <code>serialize</code> and <code>deserialize</code> must be defined."]},{code:"DKT-FT3001",exceptionText:"Non-string initial values are only allowed for serializable signals. Define serialization options.",description:["This exceptions is raised if a non-serializable signal is given an initial value other than a string or <code>null</code>","To fix this issue either define the serialization options or change the initial value to a string or <code>null</code>"]}]},{name:"queryParamSignal",exceptions:[{code:"DKT-FT3010",exceptionText:"Both serialize and deserialize must either be both defined or both undefined.",description:["This exceptions is raised if a signal's options object contains only <code>serialize</code> or only <code>deserialize</code> function definitions.","For the signal to work properly, both <code>serialize</code> and <code>deserialize</code> must be defined."]},{code:"DKT-FT3011",exceptionText:"Non-string initial values are only allowed for serializable signals. Define serialization options.",description:["This exceptions is raised if a non-serializable signal is given an initial value other than a string or <code>null</code>","To fix this issue either define the serialization options or change the initial value to a string or <code>null</code>"]}]}]};var Te={name:"DOM Boxes",functions:[{name:"getDomContentRect",description:"Calculates the content rectangle of an element, excluding padding and border values. This function is ideal for obtaining the precise dimensions of the inner content area of an element.",params:[{name:"el",type:"HTMLElement | ElementRef<HTMLElement>",description:"The target element or Angular ElementRef whose content rectangle should be calculated.",required:!0}],returnType:"DOMRect"},{name:"getDomPaddingRect",description:"Calculates the padding rectangle of an element, including padding but excluding border values. Use this function to get dimensions within padding boundaries, excluding any borders.",params:[{name:"el",type:"HTMLElement | ElementRef<HTMLElement>",description:"The target element or Angular ElementRef whose padding rectangle should be calculated.",required:!0}],returnType:"DOMRect"}]};var we=(()=>{class n{constructor(){this.DomBoxesExampleData=Y}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["dom-boxes-page"]],decls:86,vars:2,consts:[["pageTitle","DOM Boxes"],["heading","Example Usage of Both Functions","initialTab","ts",3,"data","isCodeShown"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The DOM Boxes utility provides functions to retrieve specific box dimensions of an HTML element, namely the content and padding boxes. These functions adjust for padding and border values, offering more precise measurements than the native "),i(3,"code"),e(4,"getBoundingClientRect"),t(),e(5," method. "),t()(),i(6,"section")(7,"app-h2"),e(8,"getDomContentRect"),t(),i(9,"p"),e(10," The "),i(11,"code"),e(12,"getDomContentRect"),t(),e(13," function calculates the content area of an element, excluding padding and border values. This is useful for obtaining the precise inner content dimensions, which is essential for layout calculations that depend only on the usable content area. "),t(),i(14,"p"),e(15," To use "),i(16,"code"),e(17,"getDomContentRect"),t(),e(18,", pass an "),i(19,"code"),e(20,"HTMLElement"),t(),e(21," or an Angular "),i(22,"code"),e(23,"ElementRef<HTMLElement>"),t(),e(24," as the argument. The function will return a "),i(25,"code"),e(26,"DOMRect"),t(),e(27," object with properties that reflect the adjusted dimensions and coordinates of the content area, based on the element's computed style. "),t()(),i(28,"section")(29,"app-h2"),e(30,"getDomPaddingRect"),t(),i(31,"p"),e(32," The "),i(33,"code"),e(34,"getDomPaddingRect"),t(),e(35," function calculates the element's area including padding but excluding the border values. This function is suitable when you need the element's padded area without counting the borders, such as when working within the padding boundaries of a container. "),t(),i(36,"p"),e(37," Similar to "),i(38,"code"),e(39,"getDomContentRect"),t(),e(40,", this function accepts an "),i(41,"code"),e(42,"HTMLElement"),t(),e(43," or an Angular "),i(44,"code"),e(45,"ElementRef<HTMLElement>"),t(),e(46," as an argument. The returned "),i(47,"code"),e(48,"DOMRect"),t(),e(49," object provides the coordinates and dimensions of the padding box, based on the computed style values. "),t()(),s(50,"app-code-example",1),i(51,"section")(52,"app-h2"),e(53,"Best Practices"),t(),i(54,"p"),e(55," Here are some guidelines on when to use "),i(56,"code"),e(57,"getDomContentRect"),t(),e(58," and "),i(59,"code"),e(60,"getDomPaddingRect"),t(),e(61," over the native "),i(62,"code"),e(63,"getBoundingClientRect"),t(),e(64," method. "),t(),i(65,"ul")(66,"li")(67,"strong"),e(68,"Use "),i(69,"code"),e(70,"getDomContentRect"),t()(),e(71," when you need only the content dimensions of an element, excluding padding and borders. This is ideal for precise layout adjustments where only the core content area should be considered. "),t(),i(72,"li")(73,"strong"),e(74,"Use "),i(75,"code"),e(76,"getDomPaddingRect"),t()(),e(77," if you need the padded area of an element without including the borders. This is useful in cases where layout or positioning needs to respect padding but should ignore border width. "),t(),i(78,"li")(79,"strong"),e(80,"Use "),i(81,"code"),e(82,"getBoundingClientRect"),t()(),e(83," if you need a quick, inclusive measurement of an element, including borders and padding. This native method is generally faster and sufficient for many standard layout tasks where precise inner box dimensions are not required. "),t(),i(84,"li"),e(85," Ensure that the target element has its styles (padding, borders) explicitly set if exact measurements are needed, as these functions rely on computed style values. Missing styles might lead to unexpected dimensions. "),t()()()),o&2&&(l(50),r("data",a.DomBoxesExampleData)("isCodeShown",!1))},dependencies:[f,h,u,c,m],encapsulation:2})}}return n})();var Ce={name:"Escape HTML",modules:[{name:"ArdiumEscapeHTMLModule",exports:"ArdiumEscapeHTMLPipe"}],pipes:[{name:"ArdiumEscapeHTMLPipe",exportedFrom:"ArdiumEscapeHTMLModule",selector:"escapeHTML",description:"Transforms an input string into a string that is safe to use inside of HTML."}],functions:[{name:"escapeHTML",description:"Transforms an input string into a string that is safe to use inside of HTML.",returnType:"string",params:[{name:"value",type:"string",description:"The string to transform.",required:!0}]}]};var De=(()=>{class n{constructor(){this.EscapeHTMLExampleData=ee}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["escape-html-page"]],decls:70,vars:1,consts:[["pageTitle","Escape HTML"],["moduleName","ArdiumEscapeHTMLModule"],["href","https://angular.dev/guide/templates/binding"],["heading","Basic escapeHTML pipe usage",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2,"Pipe for escaping HTML and XML strings in Angular templates, with a helper function for programmatic usage."),t()(),s(3,"app-prerequisites",1),i(4,"section")(5,"app-h2"),e(6,"Why escape HTML?"),t(),i(7,"p"),e(8," Escaping HTML is essential to prevent unintended behaviors caused by special characters in strings. Characters like "),i(9,"code"),e(10,"<"),t(),e(11,", "),i(12,"code"),e(13,">"),t(),e(14,", "),i(15,"code"),e(16,'"'),t(),e(17,", and others, if left unescaped, can be interpreted as HTML, which could lead to rendering issues or potential security risks, such as Cross-Site Scripting (XSS) attacks. "),t()(),i(18,"section")(19,"app-h2"),e(20,"Using the "),i(21,"code"),e(22,"escapeHTML"),t(),e(23," pipe"),t(),i(24,"p"),e(25," The "),i(26,"code"),e(27,"escapeHTML"),t(),e(28," pipe offers a convenient way to sanitize HTML content within Angular templates, converting special characters to their HTML-safe equivalents. "),t(),i(29,"p"),e(30," By using this pipe, characters such as "),i(31,"code"),e(32,"&"),t(),e(33,", "),i(34,"code"),e(35,"<"),t(),e(36,", "),i(37,"code"),e(38,">"),t(),e(39,", "),i(40,"code"),e(41,'"'),t(),e(42,", and "),i(43,"code"),e(44,"'"),t(),e(45," are automatically converted to their HTML entities, making the content safe for display in the DOM. "),t(),i(46,"p"),e(47," The "),i(48,"code"),e(49,"escapeHTML"),t(),e(50," pipe is particularly helpful when displaying user-generated content, such as usernames, comments, or any other inputs from external sources, ensuring that these strings render as text rather than HTML. To use the "),i(51,"code"),e(52,"escapeHTML"),t(),e(53," pipe in your template, simply apply it to any string binding where HTML escaping is needed. "),t(),i(54,"p")(55,"strong"),e(56,"Note:"),t(),e(57," escaping HTML is not needed when the text will be used with "),i(58,"a",2),e(59,"text interpolation"),t(),e(60,". "),t(),s(61,"app-code-example",3),t(),i(62,"section")(63,"app-h2"),e(64,"Programmatic usage"),t(),i(65,"p"),e(66," For programmatic use outside of templates, the "),i(67,"code"),e(68,"escapeHTML"),t(),e(69," function offers the same HTML-escaping functionality, converting characters directly in code where template pipes aren't available. "),t()()),o&2&&(l(61),r("data",a.EscapeHTMLExampleData))},dependencies:[f,h,u,S,c,m],encapsulation:2})}}return n})();var ke={name:"File Utility Pipes",modules:[{name:"ArdiumFilePipesModule",description:"Module providing file utility pipes for extracting file extension, file name, and formatting file size.",exports:["ArdiumFileExtensionPipe","ArdiumFileNamePipe","ArdiumFileSizePipe"]}],pipes:[{name:"fileext",selector:"fileext",exportedFrom:"ArdiumFilePipesModule",description:"Extracts the file extension from a filename or File object. Optionally includes the dot prefix in the returned extension.",params:[{name:"value",type:"string | File",description:"The file name as a string or a File object from which the extension is extracted.",required:!0},{name:"withDot",type:"boolean",description:"Determines if the dot should prefix the returned extension (default: false).",required:!1,default:"false"}]},{name:"filename",selector:"filename",exportedFrom:"ArdiumFilePipesModule",description:"Extracts the base name from a file name or File object, excluding the extension.",params:[{name:"value",type:"string | File",description:"The file name as a string or a File object from which the base name is derived.",required:!0}]},{name:"filesize",selector:"filesize",exportedFrom:"ArdiumFilePipesModule",description:"Converts a file size (in bytes) to a human-readable format. Allows customization of precision and spacing.",params:[{name:"value",type:"number",description:"The file size in bytes.",required:!0},{name:"precision",type:"number",description:"Decimal precision for the converted size (default: 2).",required:!1,default:"2"},{name:"useSpace",type:"boolean",description:"Determines if a space separates the value and unit (default: false).",required:!1,default:"false"}]}]};var Ae=(()=>{class n{constructor(){this.FilePipesExampleData=te}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["file-pipes-page"]],decls:116,vars:1,consts:[["pageTitle","File Pipes"],["moduleName","ArdiumFilePipesModule"],["heading","Basic file pipes usage",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2,"Utility pipes for handling file extensions, file names, and file sizes in Angular templates."),t()(),s(3,"app-prerequisites",1),i(4,"section")(5,"app-h2"),e(6,"Overview"),t(),i(7,"p"),e(8," The "),i(9,"code"),e(10,"ArdiumFilePipesModule"),t(),e(11," provides three utility pipes that facilitate common file-related operations in Angular templates. These include: "),t(),i(12,"ul")(13,"li")(14,"code"),e(15,"filename"),t(),e(16,": Retrieves the base name of a file, excluding the extension."),t(),i(17,"li")(18,"code"),e(19,"fileext"),t(),e(20,": Extracts the file extension, optionally with the dot."),t(),i(21,"li")(22,"code"),e(23,"filesize"),t(),e(24,": Converts a file size (in bytes) into a human-readable format with customizable units. "),t()()(),i(25,"section")(26,"app-h2"),e(27,"Using the "),i(28,"code"),e(29,"filename"),t(),e(30," Pipe"),t(),i(31,"p"),e(32," The "),i(33,"code"),e(34,"filename"),t(),e(35," pipe retrieves the base name of a file without the extension, working with both file names as strings and "),i(36,"code"),e(37,"File"),t(),e(38," objects. Passing in "),i(39,"code"),e(40,"null"),t(),e(41," or "),i(42,"code"),e(43,"undefined"),t(),e(44,' will result in an empty string. A file name containing only the extension, such as ".env", will result in the whole file name being returned. '),t(),i(45,"p"),e(46," This pipe is particularly helpful when displaying a list of file names without their extensions in the user interface. "),t(),i(47,"p"),e(48," Apply the "),i(49,"code"),e(50,"filename"),t(),e(51," pipe to any string or "),i(52,"code"),e(53,"File"),t(),e(54," object binding where the base name is required. "),t()(),i(55,"section")(56,"app-h2"),e(57,"Using the "),i(58,"code"),e(59,"fileext"),t(),e(60," Pipe"),t(),i(61,"p"),e(62," The "),i(63,"code"),e(64,"fileext"),t(),e(65," pipe extracts the extension from a file name or a "),i(66,"code"),e(67,"File"),t(),e(68," object. It also has an option to include the dot in the extension. Passing in "),i(69,"code"),e(70,"null"),t(),e(71," or "),i(72,"code"),e(73,"undefined"),t(),e(74," will return "),i(75,"code"),e(76,"null"),t(),e(77,'. A file name containing only the extension, such as ".env", will result in '),i(78,"code"),e(79,"null"),t(),e(80," as well. "),t(),i(81,"p"),e(82,"This pipe is useful for displaying file types in applications that manage or display file lists."),t(),i(83,"p"),e(84," Apply the "),i(85,"code"),e(86,"fileext"),t(),e(87," pipe to any string or "),i(88,"code"),e(89,"File"),t(),e(90," object binding where the file's extension is required. "),t()(),i(91,"section")(92,"app-h2"),e(93,"Using the "),i(94,"code"),e(95,"filesize"),t(),e(96," Pipe"),t(),i(97,"p"),e(98," The "),i(99,"code"),e(100,"filesize"),t(),e(101," pipe converts a file size (in bytes) into a human-readable format. It provides customizable precision and an option to insert a space between the value and unit. Passing in "),i(102,"code"),e(103,"null"),t(),e(104," or "),i(105,"code"),e(106,"undefined"),t(),e(107," will result in an empty string. "),t(),i(108,"p"),e(109," This pipe is particularly useful when displaying file sizes for user-uploaded content or media in a clear, readable format. "),t(),i(110,"p"),e(111,"Apply the "),i(112,"code"),e(113,"filesize"),t(),e(114," pipe to any numeric binding that represents a file size in bytes."),t()(),s(115,"app-code-example",2)),o&2&&(l(115),r("data",a.FilePipesExampleData))},dependencies:[f,h,u,S,c,m],encapsulation:2})}}return n})();var Pe={name:"File System",services:[{name:"FileSystemService",providedIn:'"root"',description:"Service for handling file system operations, including saving, uploading, and reading files. It leverages the File System Access API when available and provides fallback methods for unsupported browsers.",methods:[{name:"isFileSystemAPISupported",description:"Checks if the File System Access API is supported for the specified method.",params:[{name:"method",type:"'showSaveFilePicker' | 'showOpenFilePicker'",description:"The file system method to check for support.",required:!0}],returnType:"boolean"},{name:"saveAs",description:"Saves data as a file using the File System API or a fallback method.",params:[{name:"data",type:"string | Blob",description:"The data to be saved, either as a string or a Blob.",required:!0},{name:"options",type:"FileSystemSaveOptions",description:"Options for saving the file, such as file name and save method.",required:!1,default:'{ method: FileSystemMethod.PreferFileSystem, fileName: "download" }',isMergedObject:!0}],returnType:"Promise<boolean>"},{name:"requestFileUpload",description:"Requests a file upload using the File System Access API or a fallback method.",params:[{name:"options",type:"FileSystemRequestOptions",description:"Options for requesting the file upload, such as accepted file types.",required:!1,default:"{ method: FileSystemMethod.PreferFileSystem, multiple: false }",isMergedObject:!0}],returnType:"Promise<File | File[] | null>"},{name:"readFile",description:"Reads the content of a file as a string or ArrayBuffer, depending on the specified method.",params:[{name:"file",type:"File",description:"The file to read.",required:!0},{name:"readAs",type:"'text' | 'binary'",description:'The method to read the file ("text" for string or "binary" for ArrayBuffer).',required:!1,default:"'text'"},{name:"encoding",type:"string",description:"The encoding to use when reading the file as text. Defaults to UTF-8.",required:!1,default:"'UTF-8'"}],returnType:"Promise<string | ArrayBuffer | null>"}]}],enums:[{name:"FileSystemMethod",description:"Enumeration of file system methods to define whether the File System API or cross-browser compatible methods should be used.",definition:`export const FileSystemMethod = {
  PreferFileSystem: 'preferFileSystem',
  CrossBrowser: 'crossBrowser',
} as const;
export type FileSystemMethod = typeof FileSystemMethod[keyof typeof FileSystemMethod];`},{name:"FileSystemStartDirectory",description:"Enumeration of predefined directories to use as the starting location for file dialogs.",definition:`export const FileSystemStartDirectory = {
  Desktop: 'desktop',
  Documents: 'documents',
  Downloads: 'downloads',
  Music: 'music',
  Pictures: 'pictures',
  Videos: 'videos',
} as const;
export type FileSystemStartDirectory = typeof FileSystemStartDirectory[keyof typeof FileSystemStartDirectory];`}],types:[{name:"FileSystemSaveOptions",description:"Configuration options for saving files, including file name, method, and allowed file types.",definition:`type FileSystemSaveOptions = {
  method: "preferFileSystem";
  fileName?: string;
  directoryId?: string;
  startDirectory?: FileSystemStartDirectory;
  types?: Array<{
    description?: string;
    accept: Record<string, string[]>
  }>
} | {
  method: "crossBrowser";
}`},{name:"FileSystemRequestOptions",description:"Configuration options for requesting file uploads, including accepted file types and method.",definition:`type FileSystemRequestOptions = {
  method: "preferFileSystem";
  accept?: string | string[];
  multiple?: boolean;
  directoryId?: string;
  startDirectory?: FileSystemStartDirectory;
  types?: Array<{
    description?: string;
    accept: Record<string, string[]>
  }>
} | {
  method: "crossBrowser";
}`}]};var Re={name:"FileSystem",exceptions:[{name:"FileSystemService",exceptions:[{code:"DKT-FT0010",exceptionText:'"accept" property in FileSystemService must be a list of valid file extensions. Value "<i>some value</i>" is not a valid extension.',description:["This exceptions is raised by the <code>requestFileUpload</code> function if the <code>accept</code> option has at least one invalid extension in the list.",'A valid extension is an extension that starts with a dot (<code>.</code>) and is followed by at least one alphanumeric character. <code>accept</code> can also take the string <code>"*"</code> as a value, meaning that any extension is accepted.']}]}]};var Ye=["*"],Oe=(()=>{class n{constructor(){this.link=T.required()}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["app-see-also"]],inputs:{link:[1,"link"]},ngContentSelectors:Ye,decls:4,vars:1,consts:[[3,"href"]],template:function(o,a){o&1&&(I(),i(0,"i"),e(1," See also: "),i(2,"a",0),M(3),t()()),o&2&&(l(2),r("href",a.link(),H))},styles:["[_nghost-%COMP%]{padding-left:1.6rem;font-size:.875rem;display:block;margin-top:.375rem}"]})}}return n})();var qe=(()=>{class n{constructor(){this.FileSystemIsSupportedExampleData=ie,this.FileSystemSaveAsExampleData=oe,this.FileSystemRequestUploadExampleData=ne}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["file-system-page"]],decls:111,vars:3,consts:[["pageTitle","File System Service"],["href","https://caniuse.com/native-filesystem-api"],["link","https://developer.mozilla.org/en-US/docs/Web/API/File_System_API"],["link","https://caniuse.com/mdn-api_window_showsavefilepicker"],["heading","Using isFileSystemAPISupported",3,"data"],["link","https://caniuse.com/mdn-api_window_showopenfilepicker"],["heading","Saving text to file",3,"data"],["heading","Requesting file upload",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," Service for handling file system operations, including saving, uploading, and reading files, using the File System API when available and falling back to compatible methods when necessary. "),t(),i(3,"p")(4,"strong"),e(5,"Warning!"),t(),e(6," Some features of this service are not widely available in current browsers and rely on experimental features. Fallback methods are still compatible with older browsers, though. See the "),i(7,"a",1),e(8,"caniuse.com page"),t(),e(9," for more info. "),t()(),i(10,"section")(11,"app-h2"),e(12,"Method: "),i(13,"code"),e(14,"isFileSystemAPISupported"),t()(),i(15,"p"),e(16," Checks if the File System API is supported for a specified method. This can be used to determine if the service should use the File System API or fallback methods. "),t(),i(17,"p"),e(18," Requires passing in the method to be checked - either "),i(19,"code"),e(20,"showSaveFilePicker"),t(),e(21," or "),i(22,"code"),e(23,"showOpenFilePicker"),t(),e(24,". Returns "),i(25,"code"),e(26,"true"),t(),e(27," if the method is supported on the user's browser, otherwise returns "),i(28,"code"),e(29,"false"),t(),e(30,". "),t(),i(31,"app-see-also",2),e(32," File System API on MDN Docs "),t(),i(33,"app-see-also",3),e(34," Availability Data on caniuse.com "),t(),s(35,"app-code-example",4),t(),i(36,"section")(37,"app-h2"),e(38,"Saving data to files"),t(),i(39,"p"),e(40,"If a programmatic way of letting the user download files is needed, the "),i(41,"code"),e(42,"saveAs"),t(),e(43," method can be used."),t(),i(44,"p"),e(45," This method requires two parameters: "),i(46,"code"),e(47,"data"),t(),e(48,", which is the data to be saved (either as string or a "),i(49,"code"),e(50,"Blob"),t(),e(51,"), and the "),i(52,"code"),e(53,"options"),t(),e(54," object. "),t(),i(55,"p"),e(56," Options can define which method to use for saving the file: to prefer using "),i(57,"code"),e(58,"FileSystem"),t(),e(59," API (if available), or to use the cross-browser compatible method (also used as a fallback when file system API is not available). The FileSystem method allows for more flexibility by allowing the user to choose the download location and file name before actually downloading. Additional information about the file and the starting directory can also be supplied. "),t(),i(60,"p"),e(61," The method returns a promise that resolves to "),i(62,"code"),e(63,"true"),t(),e(64," if the file was saved successfully, or "),i(65,"code"),e(66,"false"),t(),e(67," otherwise. "),t(),i(68,"app-see-also",2),e(69," File System API on MDN Docs "),t(),i(70,"app-see-also",5),e(71," Availability Data on caniuse.com "),t(),s(72,"app-code-example",6),t(),i(73,"section")(74,"app-h2"),e(75,"Requesting file upload"),t(),i(76,"p"),e(77," Opens a dialog to request file uploads, using the File System Access API if preferred and supported, or a fallback option if not. "),t(),i(78,"p"),e(79," This method takes zero or one parameter, being the options object. Options can define which method to use for requesting the file: The preferred method and additional information about the file to be uploaded. Those include allowed extensions, mime types, starting directory, is multiple files allowed, etc. "),t(),i(80,"p"),e(81," The method returns a promise that resolves to "),i(82,"code"),e(83,"File | File[] | null"),t(),e(84,", depending on the settings. "),i(85,"code"),e(86,"null"),t(),e(87," is returned if the action was unsuccessful (eg. user closed the dialog without uploading a file). "),t(),s(88,"app-code-example",7),t(),i(89,"section")(90,"app-h2"),e(91,"Reading file contents"),t(),i(92,"p"),e(93," The "),i(94,"code"),e(95,"readFile"),t(),e(96," method can be used to easily read file contents. The file can either be read as a string or an array buffer, and optionally the encoding can be specified as well. "),t(),i(97,"p"),e(98," The method takes two to three parameters: the file to be read, and the method to use to read the file (either "),i(99,"code"),e(100,'"text"'),t(),e(101," or "),i(102,"code"),e(103,'"binary"'),t(),e(104,"). If "),i(105,"code"),e(106,'"text"'),t(),e(107," was used, the encoding can also be specified ("),i(108,"code"),e(109,'"utf-8"'),t(),e(110," by default) "),t()()),o&2&&(l(35),r("data",a.FileSystemIsSupportedExampleData),l(37),r("data",a.FileSystemSaveAsExampleData),l(16),r("data",a.FileSystemRequestUploadExampleData))},dependencies:[f,h,u,Oe,c,m],encapsulation:2})}}return n})();var He={name:"Hold",modules:[{name:"ArdiumHoldModule",description:"Module providing the hold directive.",exports:["ArdiumHoldDirective"]}],directives:[{name:"ArdiumHoldDirective",exportedFrom:"ArdiumHoldModule",selector:"ardHold",description:"Directive that detects when a user clicks and holds on an element.",inputs:[{name:"ardHoldDelay",type:"number-like",description:"How long, in milliseconds, will the user have to hold an element before the first event is fired.",required:!1,default:"500"},{name:"ardHoldRepeat",type:"number-like",description:"How long, in milliseconds, before repeating events are fired if the user keeps holding the element.",required:!1,default:"66.67"},{name:"ardAllowSpaceKey",type:"boolean-like",description:"If set to true, the user will be able to use the space key to trigger hold events.",required:!1,default:"false"},{name:"ardAllowEnterKey",type:"boolean-like",description:"If set to true, the user will be able to use the enter key to trigger hold events.",required:!1,default:"false"},{name:"ardHoldDisabled",type:"boolean-like",description:"If set to true, the directive will become inactive and all existing hold events will stop.",required:!1,default:"false"}],outputs:[{name:"ardHold",type:"void",description:"Fired when the user clicks and holds the target element. After the first event is fired, next ones are fired repeatedly until the user presses off the element."}]}],interfaces:[{name:"ArdHoldDefaults",description:"The default values for <code>ArdiumHoldDirective</code>.",properties:[{name:"delay",type:"number",description:"Default value for <code>ardHoldDelay</code> input."},{name:"repeat",type:"number",description:"Default value for <code>ardHoldRepeat</code> input."},{name:"allowSpaceKey",type:"boolean",description:"Default value for <code>ardAllowSpaceKey</code> input."},{name:"allowEnterKey",type:"boolean",description:"Default value for <code>ardAllowEnterKey</code> input."}]}],injectionTokens:[{name:"ARD_HOLD_DEFAULTS",type:"ArdHoldDefaults",description:"Provides default values for all inputs of <code>ArdiumHoldDirective</code>.",allOptional:!0}]};var Ie=(()=>{class n{constructor(){this.HoldBasicExampleData=ae,this.HoldTimingsExampleData=re}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["hold-page"]],decls:59,vars:2,consts:[["pageTitle","Ardium Hold Directive"],["moduleName","ArdiumHoldModule"],["heading","Basic hold directive usage",3,"data"],["heading","Hold directive timings",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The "),i(3,"code"),e(4,"ArdiumHoldDirective"),t(),e(5," is a directive that detects when a user clicks and holds on an element. It emits a customizable event, with support for specifying delays and intervals, as well as keyboard-based activation. "),t(),i(6,"p"),e(7," This directive can be used for implementing features like long-press actions or repeated execution while holding down a button. "),t()(),s(8,"app-prerequisites",1),i(9,"section")(10,"app-h2"),e(11,"Basic usage"),t(),i(12,"p"),e(13,' Enables the detection of "click-and-hold" events on an element. When the user clicks and holds, the directive emits the '),i(14,"code"),e(15,"ardHold"),t(),e(16," output at the specified interval after an initial delay. "),t(),s(17,"app-code-example",2),t(),i(18,"section")(19,"app-h2"),e(20,"Customizing the timings"),t(),i(21,"p"),e(22," The hold directive allows to customize the initial delay and interval with "),i(23,"code"),e(24,"ardHoldDelay"),t(),e(25," and "),i(26,"code"),e(27,"ardHoldRepeat"),t(),e(28," properties (in milliseconds). Any number or string-number is valid. "),t(),i(29,"p"),e(30," The delay represents the amount of milliseconds between the initial click and the first event being emitted. By default, it is 500\xA0ms. "),t(),i(31,"p"),e(32," The interval represents the amount of milliseconds between each event being emitted if the user keeps holding. By default, it is 66.67\xA0ms, or 15\xA0events per second. Any value below 4 ms will most likely be ineffective due to technical limitations. "),t(),i(33,"p"),e(34," There is an injection token "),i(35,"code"),e(36,"ARD_HOLD_DEFAULTS"),t(),e(37," available to set the default values for those and other settings for the directive. "),t(),s(38,"app-code-example",3),t(),i(39,"section")(40,"app-h2"),e(41,"Keyboard Support"),t(),i(42,"p"),e(43," The directive supports keyboard activation via the "),i(44,"code"),e(45,"Enter"),t(),e(46," and "),i(47,"code"),e(48,"Space"),t(),e(49," keys. To enable this functionality, set the "),i(50,"code"),e(51,"ardAllowSpaceKey"),t(),e(52," or "),i(53,"code"),e(54,"ardAllowEnterKey"),t(),e(55," inputs to "),i(56,"code"),e(57,"true"),t(),e(58,". "),t()()),o&2&&(l(17),r("data",a.HoldBasicExampleData),l(21),r("data",a.HoldTimingsExampleData))},dependencies:[f,h,u,S,c,m],encapsulation:2})}}return n})();var Me=(()=>{class n{constructor(){this.routeData=R()}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["devkit-home-page"]],decls:1,vars:1,consts:[["topText","Ardium UI offers a wide variety of ready-to-use abstractions to speed up your work",3,"data"]],template:function(o,a){o&1&&s(0,"app-home-page",0),o&2&&r("data",a.routeData)},dependencies:[z],encapsulation:2})}}return n})();var Le={name:"HTTP Service",interfaces:[{name:"RequestOptions",description:"Represents the options that can be passed to an HTTP request.",properties:[{name:"body",type:"any"},{name:"headers",type:"HttpHeaders | { [header: string]: string | string[] }"},{name:"context",type:"HttpContext"},{name:"observe",type:"'body' | 'events' | 'response'"},{name:"params",type:"HttpParams | { [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean> }"},{name:"reportProgress",type:"boolean"},{name:"responseType",type:"'arraybuffer' | 'blob' | 'json' | 'text'"},{name:"withCredentials",type:"boolean"},{name:"transferCache",type:"{ includeHeaders?: string[] } | boolean"}]}],types:[{name:"RequestReturnType",description:"Defines the return type of an HTTP request based on the observe and responseType properties.</p><p>This is a very complicated conditional type, but basically it encompasses all 16 possible return types of an HttpClient function into a single type.",definition:`type RequestReturnType<
  O extends RequestOptions,
  TRes = any,
> = O['observe'] extends 'body'
  ? O['responseType'] extends 'arraybuffer'
    ? ArrayBuffer
    : O['responseType'] extends 'blob'
      ? Blob
      : O['responseType'] extends 'text'
        ? string
        : TRes
  : O['observe'] extends 'response'
    ? HttpResponse<
        O['responseType'] extends 'arraybuffer'
          ? ArrayBuffer
          : O['responseType'] extends 'blob'
            ? Blob
            : O['responseType'] extends 'text'
              ? string
              : TRes
      >
    : O['observe'] extends 'events'
      ? HttpEvent<
          O['responseType'] extends 'arraybuffer'
            ? ArrayBuffer
            : O['responseType'] extends 'blob'
              ? Blob
              : O['responseType'] extends 'text'
                ? string
                : TRes
        >
      : never;`,typeParams:[{name:"O",type:"RequestOptions",description:"The request options type."},{name:"TRes",type:"any",default:"any",description:"The response data type."}]}],classes:[{name:"_HttpService",description:"Internal HTTP service class that provides methods for making various HTTP requests.",properties:[{name:"apiUrl",type:"readonly string",description:"Base URL for all requests."}],methods:[{name:"request",description:"Sends an HTTP request using the given method or HttpRequest object.",params:[{name:"methodOrReq",type:"string | HttpRequest<any>",description:"HTTP method as a string, or an HttpRequest object to be sent.",required:!0},{name:"url",type:"string",description:"The endpoint URL, used only if methodOrReq is a string."},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"delete",description:"Sends a DELETE request to the specified URL.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"options",type:"O & { body?: TBody }",description:"Optional request options, which may include a body."}],typeParams:[{name:"TBody",type:"Object",default:"Object",description:"The body type for the DELETE request, if any."},{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"get",description:"Sends a GET request to the specified URL.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"head",description:"Sends a HEAD request to the specified URL.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"jsonp",description:"Sends a JSONP request to the specified URL with the provided callback parameter.",params:[{name:"url",type:"string",description:"The resource URL to request.",required:!0},{name:"callbackParam",type:"string",description:"The name of the callback parameter in the JSONP request.",required:!0}],typeParams:[{name:"TRes",type:"Object",default:"Object",description:"The response data type."}],returnType:"Observable<TRes>"},{name:"options",description:"Sends an OPTIONS request to the specified URL.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"patch",description:"Sends a PATCH request to the specified URL with the provided body.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"body",type:"TBody | null",description:"The resources to be updated using PATCH."},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TBody",type:"any",default:"any",description:"The type of the PATCH body content."},{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"post",description:"Sends a POST request to the specified URL with the provided body.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"body",type:"TBody | null",description:"The content to be sent in the POST request."},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TBody",type:"any",default:"any",description:"The type of the POST body content."},{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"},{name:"put",description:"Sends a PUT request to the specified URL with the provided body.",params:[{name:"url",type:"string",description:"The endpoint URL.",required:!0},{name:"body",type:"TBody | null",description:"The resources to be added/updated using PUT."},{name:"options",type:"O",description:"Optional request options to configure the request."}],typeParams:[{name:"TBody",type:"any",default:"any",description:"The type of the PUT body content."},{name:"TRes",type:"Object",default:"Object",description:"The response data type."},{name:"O",type:"RequestOptions",default:"{}",description:"The request options type."}],returnType:"Observable<RequestReturnType<O, TRes>>"}]}],functions:[{name:"createHttpService",description:"Creates an HTTP service instance with a base URL and optional default request options.",params:[{name:"apiUrl",type:"string",description:"Base URL for all requests made by this service.",required:!0},{name:"defaultOptions",type:"RequestOptions",description:"Default request options merged into each request if provided."}],returnType:"_HttpService"}]};var Fe={name:"HTTP",exceptions:[{name:"HttpService",exceptions:[{code:"DKT-WA0020",exceptionText:'The url "<i>url passed in</i>" passed into custom HTTP Service seems to be faulty, as it would produce a request to "<i>final url</i>". Custom HTTP Service instances prepend an API url, and thus only accept relative url paths.',description:["This exception is shown when a non-relative url is passed into a method of the HTTP Service created using <code>createHttpService</code>.","Custom HTTP Services are meant to be used together with a constant API url prepended to every request, and thus their methods only allow passing in urls relative to the API url assigned to the service."],exampleResults:[{code:`class MyHttpService extends createHttpService('https://localhost:8080/api/')

// ...

readonly http = inject(MyHttpService);

ngOnInit() {
  this.http.get('https://example.com/'); // <-- this produces the exception
}`,codeLanguage:b.TS,result:'DKT-WA0020: The url "https://example.com/" passed into custom HTTP Service seems to be faulty, as it would produce a request to "https://localhost:8080/api/https://example.com/". Custom HTTP Service instances prepend an API url, and thus only accept relative url paths.'}]}]}]};var Be=(()=>{class n{constructor(){this.language=T.required(),this.codeBefore=T(""),this.codeAfter=T(""),this.scrollSync=A(!0,{method:k.LocalStorage,name:"before-after-scroll-sync",serialize:String,deserialize:d=>d==="true"}),this.verticalLayout=A(!1,{method:k.LocalStorage,name:"before-after-vertical-layout",serialize:String,deserialize:d=>d==="true"})}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["app-code-before-after"]],inputs:{language:[1,"language"],codeBefore:[1,"codeBefore"],codeAfter:[1,"codeAfter"]},decls:3,vars:8,consts:[["textLeft","Before","textRight","After","allowScrollSync","","allowLayoutChange","",3,"scrollSyncChange","verticalLayoutChange","contentToCopyLeft","contentToCopyRight","scrollSync","verticalLayout"],["side","left","styled","false","noScroll","",3,"language","code"],["side","right","styled","false","noScroll","",3,"language","code"]],template:function(o,a){o&1&&(i(0,"app-two-pane-container",0),F("scrollSyncChange",function(E){return D(a.scrollSync,E)||(a.scrollSync=E),E})("verticalLayoutChange",function(E){return D(a.verticalLayout,E)||(a.verticalLayout=E),E}),s(1,"app-code",1)(2,"app-code",2),t()),o&2&&(r("contentToCopyLeft",a.codeBefore())("contentToCopyRight",a.codeAfter()),L("scrollSync",a.scrollSync)("verticalLayout",a.verticalLayout),l(),r("language",a.language())("code",a.codeBefore()),l(),r("language",a.language())("code",a.codeAfter()))},dependencies:[B,w],encapsulation:2})}}return n})();var ze=(()=>{class n{constructor(){this.codeBefore=`http = inject(HttpClient);

addTodo(newTodoName: string) {
  this.http.post('http://localhost:8080/api/add-todo', { name: newTodoName }, { withCredentials: true }).subscribe(/* ... */);
}
removeTodo(todoId: string) {
  this.http.delete(\`http://localhost:8080/api/todo/\${todoId}\`, { withCredentials: true }).subscribe(/* ... */);
}
updateTodo(todoId: string, newTodoName: string) {
  this.http.put(\`http://localhost:8080/api/todo/\${todoId}\`, { name: newTodoName }, { withCredentials: true }).subscribe(/* ... */);
}`,this.codeAfter=`http = inject(MyHttpService);

addTodo<{ name: string }>(newTodoName: string) {
  this.http.post('add-todo', { name: newTodoName }).subscribe(/* ... */);
}
removeTodo(todoId: string) {
  this.http.delete(\`todo/\${todoId}\`).subscribe(/* ... */);
}
updateTodo<{ name: string }>(todoId: string, newTodoName: string) {
  this.http.put(\`todo/\${todoId}\`, { name: newTodoName }).subscribe(/* ... */);
}`,this.howToCreateCode=`@Injectable({ providedIn: 'root' })
export class MyHttpService extends createHttpService('https://example.com/') {};`}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["http-service-page"]],decls:50,vars:3,consts:[["pageTitle","HTTP Service"],["href","https://angular.dev/api/common/http/HttpClient"],["language","typescript","styled","",3,"code"],["language","typescript",3,"codeBefore","codeAfter"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," An extension of the native "),i(3,"a",1)(4,"code"),e(5,"HttpClient"),t()(),e(6," with support for default options and with extended type safety. "),t()(),i(7,"section")(8,"app-h2"),e(9,"Creating an HTTP Service"),t(),i(10,"p"),e(11," Custom HTTP Services are created using the `createHttpService` function. It takes two arguments: a string containing the API url, and (optionally) default settings to be used for every request. "),t(),i(12,"p"),e(13," The function returns a class definition. To create an HTTP Service in a project, create a service that extends from the returned class definition. "),t(),s(14,"app-code",2),i(15,"p")(16,"strong"),e(17,"Note:"),t(),e(18," the native "),i(19,"code"),e(20,"HttpClient"),t(),e(21," still has to be provided with "),i(22,"code"),e(23,"provideHttpClient()"),t(),e(24,"! "),t()(),i(25,"section")(26,"app-h2"),e(27,"Why create a custom HTTP Service?"),t(),i(28,"p"),e(29," The newly created HTTP Service should be used exactly the same as the native "),i(30,"code"),e(31,"HttpClient"),t(),e(32,". All the same methods are available, but "),i(33,"code"),e(34,"POST"),t(),e(35,", "),i(36,"code"),e(37,"PUT"),t(),e(38,", and "),i(39,"code"),e(40,"PATCH"),t(),e(41," methods now support specifying the request body type through a type parameter. "),t(),i(42,"p"),e(43," The main reason to use a custom HTTP Service over "),i(44,"code"),e(45,"HttpClient"),t(),e(46," is the ability to specify the API url that will be prepended to every request, which is not easily possible with the native client. "),t(),i(47,"p"),e(48,"This is how a custom HTTP Service can improve code:"),t(),s(49,"app-code-before-after",3),t()),o&2&&(l(14),r("code",a.howToCreateCode),l(35),r("codeBefore",a.codeBefore)("codeAfter",a.codeAfter))},dependencies:[h,u,Be,w,c,m],encapsulation:2})}}return n})();var Ke={name:"Infinite Scroll",modules:[{name:"ArdiumInfiniteScrollModule",description:"Module that declares and exports the ArdiumInfiniteScrollDirective.",exports:["ArdiumInfiniteScrollDirective"]}],directives:[{exportedFrom:"./infinite-scroll.directive",name:"ArdiumInfiniteScrollDirective",description:"Directive implementing infinite scroll behavior for the specified target. Emits an event when the scroll position reaches a configurable threshold.",selector:"[ardInfScroll]",inputs:[{name:"ardInfScrollThreshold",type:"number",description:"The distance in pixels from the bottom of the scrollable area at which the infinite scroll event is triggered. The value is coerced to a number.",default:"200",required:!1},{name:"ardInfScrollActive",type:"boolean",description:"Determines whether the infinite scroll functionality is active. When false, scroll events are ignored until reactivated.",default:"true",required:!1},{name:"ardInfScrollTarget",type:'"host" | "html"',description:'Specifies the element to observe for scroll events. A value of "host" observes the host element, while "html" observes the window object.',default:'"html"',required:!1}],outputs:[{name:"ardInfScrollReachThreshold",type:"void",description:"Emitted when the scroll position reaches the defined threshold, indicating that additional content may be loaded."}]}],enums:[{name:"ArdInfScrollTarget",description:'Enum for selecting the scroll event target, where "host" refers to the host element and "html" to the window object.',definition:`export const ArdInfScrollTarget = {
  Host: 'host',
  HTML: 'html',
} as const;
export type ArdInfScrollTarget = typeof ArdInfScrollTarget[keyof typeof ArdInfScrollTarget];`}],interfaces:[{name:"ArdInfiniteScrollDefaults",description:"Interface defining default configuration options for the infinite scroll directive.",properties:[{name:"threshold",type:"number",description:"The default value for <code>ardInfScrollThreshold</code> input."},{name:"target",type:"ArdInfScrollTarget",description:"The default value for <code>ardInfScrollThreshold</code> input."}]}],injectionTokens:[{name:"ARD_INFINITE_SCROLL_DEFAULTS",type:"InjectionToken<ArdInfiniteScrollDefaults>",description:"Injection token providing default configuration values for the infinite scroll directive."}]};var je={name:"Infinite Scroll",exceptions:[{name:"ArdiumInfiniteScrollDirective",exceptions:[{code:"DKT-NF1000",exceptionText:'ardInfScroll directive has target set to "html", but the host element has just been scrolled. To ensure the directive functions properly, make the host element unscrollable.',description:['This exception is thrown if the directive has its <code>ardInfScrollTarget</code> set to <code>"html"</code>, but a scroll event on the host is detected.',"The host element should be unscrollable, and its height should fit the whole content; otherwise unexpected issues might arise."]}]}]};var Ue=(()=>{class n{constructor(){this.InfiniteScrollBasicExample=se,this.InfiniteScrollHostExample=le}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["infinite-scroll-page"]],decls:29,vars:2,consts:[["pageTitle","Infinite Scroll"],["heading","Basic infinite scroll usage","viewInFullWindowLink","/example/devkit/infinite-scroll/basic-usage-example",3,"data"],["heading","Infite scroll listening to the host",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The "),i(3,"strong"),e(4,"Infinite Scroll directive"),t(),e(5," provides infinite scroll functionality for Angular applications. It monitors a scrollable container or the window for proximity to the end and emits an event when a specified threshold is reached. "),t(),i(6,"p"),e(7," The directive is configurable via inputs to set the scroll threshold, define the scroll target, and control the active state. Upon reaching the defined threshold, an output event is emitted to signal that additional content may be loaded. "),t()(),i(8,"section")(9,"app-h2"),e(10,"Scroll Threshold and Activation"),t(),i(11,"p"),e(12," The scroll detection is governed by a configurable threshold, defined as the distance in pixels from the bottom of the scrollable area at which the directive becomes active. This value is automatically coerced into a number, ensuring consistency with the default settings. Additionally, a boolean model controls the active state of the infinite scroll functionality, allowing the scroll detection to be enabled or disabled as needed. "),t(),i(13,"p"),e(14," These configurations work in tandem to ensure that scroll events are only processed when the directive is active and when the defined threshold is met, thereby preventing unnecessary event emissions. "),t(),i(15,"app-h3"),e(16,"Event Notification Mechanism"),t(),i(17,"p"),e(18," Once the scroll position reaches the specified threshold, the directive emits an event to indicate that additional actions, such as content loading, should be initiated. This output event carries no data and serves solely as a notification. After emitting the event, the directive automatically deactivates the directive until the infinite scroll functionality is manually reactivated, ensuring controlled event handling. "),t(),s(19,"app-code-example",1),t(),i(20,"section")(21,"app-h2"),e(22,"Scroll Target Configuration"),t(),i(23,"p"),e(24," The directive supports monitoring different scroll sources. The "),i(25,"code"),e(26,"ardInfScrollTarget"),t(),e(27," option specifies whether scroll events are observed on the host element or on the global window object (default). When set to monitor the window object, the host element should remain unscrollable to avoid conflicts. When set to monitor the host object, it reacts only to the scrolling of the host element. "),t(),s(28,"app-code-example",2),t()),o&2&&(l(19),r("data",a.InfiniteScrollBasicExample),l(9),r("data",a.InfiniteScrollHostExample))},dependencies:[h,u,f,c,m,C],encapsulation:2})}}return n})();var Ne={name:"Keyboard Service",services:[{name:"KeyboardService",providedIn:"root",description:"Service for handling keyboard events and shortcuts, tracking modifier key states, and providing observables for key events.",methods:[{name:"listenToShortcut",description:"Listens for a specific keyboard shortcut and returns an observable that emits when the shortcut is pressed.",params:[{name:"toMatch",type:"string[]",description:"An array of keys representing the shortcut. Case-insensitive.",required:!0},{name:"treatAltGraphAsAltPlusCtrl",type:"boolean",description:"Whether to treat AltGraph as Alt + Ctrl.",default:"true",required:!1}],returnType:"Observable<KeyboardShortcut>"},{name:"listenToKey",description:"Listens for a specific key press and returns an observable that emits when the key is pressed. Case-insensitive.",params:[{name:"code",type:"string",description:"The key code to listen for.",required:!0}],returnType:"Observable<KeyboardKey>"},{name:"listenToKeyState",description:"Listens for a specific key state change and returns an observable that emits when the key state changes. Case-insensitive.",params:[{name:"code",type:"string",description:"The key code to listen for.",required:!0}],returnType:"Observable<KeyboardKeyState>"}],properties:[{name:"isLeftCtrlHeld",type:"Signal<boolean>",description:"Indicates if the left Ctrl key is currently held down."},{name:"isRightCtrlHeld",type:"Signal<boolean>",description:"Indicates if the right Ctrl key is currently held down."},{name:"isCtrlHeld",type:"Signal<boolean>",description:"Indicates if either the left or right Ctrl key is held down."},{name:"isLeftAltHeld",type:"Signal<boolean>",description:"Indicates if the left Alt key is held down."},{name:"isRightAltHeld",type:"Signal<boolean>",description:"Indicates if the right Alt (AltGr) key is held down."},{name:"isShiftHeld",type:"Signal<boolean>",description:"Indicates if either the left or right Shift key is held down."},{name:"isLeftShiftHeld",type:"Signal<boolean>",description:"Indicates if the left Shift key is held down."},{name:"isRightShiftHeld",type:"Signal<boolean>",description:"Indicates if the right Shift key is held down."},{name:"isLeftMetaHeld",type:"Signal<boolean>",description:"Indicates if the left Meta (Windows/Command) key is held down."},{name:"isRightMetaHeld",type:"Signal<boolean>",description:"Indicates if the right Meta (Windows/Command) key is held down."},{name:"isMetaHeld",type:"Signal<boolean>",description:"Indicates if either the left or right Meta (Windows/Command) key is held down."},{name:"capsLockState",type:"Signal<boolean | undefined>",description:"Indicates whether Caps Lock is enabled."},{name:"numLockState",type:"Signal<boolean | undefined>",description:"Indicates whether Num Lock is enabled."},{name:"scrollLockState",type:"Signal<boolean | undefined>",description:"Indicates whether Scroll Lock is enabled."},{name:"anyShortcut$",type:"Observable<KeyboardShortcut>",description:"Observable that emits when any registered shortcut is triggered."},{name:"anyKeyPress$",type:"Observable<KeyboardKey>",description:"Observable that emits when any key is pressed."},{name:"anyKeyState$",type:"Observable<KeyboardKeyState>",description:"Observable that emits when any key state changes."}]}],types:[{name:"KeyboardShortcut",definition:`export type KeyboardShortcut = {
  keys: string[];
  event: KeyboardEvent;
};`,description:"Represents a keyboard shortcut event, containing the keys involved and the event object."},{name:"KeyboardKey",definition:`export type KeyboardKey = {
  key: string;
  event: KeyboardEvent;
};`,description:"Represents a key press event, containing the key pressed and the event object."},{name:"KeyboardKeyState",definition:`export type KeyboardKeyState = {
  key: string;
  isHeld: boolean;
  event: KeyboardEvent;
};`,description:"Represents a key state event, indicating whether the key is held down and the event object."}]};var Ve={name:"Keyboard Service",exceptions:[{name:"KeyboardService",exceptions:[{code:"DKT-NF0031",exceptionText:'A keyboard shortcut definition cannot contain two final keys. Got "<i>key1</i>" and "<i>key2</i>"; only the first one will be included.',description:["This exception is thrown when a keyboard shortcut definition includes multiple final keys, which is not allowed.","Only one final key can be part of a shortcut definition, and additional keys will be ignored."],exampleResults:[{code:"this.listenToShortcut(['Ctrl', 'A', 'B']);",codeLanguage:b.TS,result:'DKT-NF0031: A keyboard shortcut definition cannot contain two final keys. Got "A" and "B"; only the first one will be included.'}]},{code:"DKT-NF0032",exceptionText:"A keyboard shortcut definition that treats AltGraph as Alt+Ctrl cannot expect the user to press AltGraph and ControlRight keys (while not pressing ControlLeft), as pressing AltGraph automatically presses ControlLeft.",description:["This exception occurs when a keyboard shortcut definition expects both AltGraph and ControlRight without ControlLeft, which is not possible.",'Since pressing AltGraph automatically activates ControlLeft, such a configuration is invalid. Listen to <code>"Ctrl"</code> instead (although listening to just AltGraph is usually enough).'],exampleResults:[{code:"this.listenToShortcut(['AltGraph', 'ControlRight']);",codeLanguage:b.TS,result:"DKT-NF0032: A keyboard shortcut definition that treats AltGraph as Alt+Ctrl cannot expect the user to press AltGraph and ControlRight keys (while not pressing ControlLeft), as pressing AltGraph automatically presses ControlLeft."}]}]}]};var We=(()=>{class n{constructor(){this.KeyboardServiceListenToKeyExample=de,this.KeyboardServiceListenToShortcutExample=me,this.KeyboardServiceListenToKeyStateExample=pe,this.KeyboardServiceModifierKeyStateExample=ce}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["keyboard-service-page"]],decls:201,vars:4,consts:[["pageTitle","Keyboard Service"],["href","https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values","target","_blank"],["heading","Listening to a Key Press","displayWhenSimple","",3,"data"],["heading","Listening to a Keyboard Shortcut","displayWhenSimple","",3,"data"],["heading","Listening to Key State Changes","displayWhenSimple","",3,"data"],["heading","Checking Modifier Key States",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The "),i(3,"strong"),e(4,"KeyboardService"),t(),e(5," provides a robust system for handling keyboard events. It captures and manages key states, listens for keyboard shortcuts, and emits events for specific key presses and combinations. "),t(),i(6,"p"),e(7," This service supports tracking modifier keys like Control, Alt, Shift, and Meta, as well as custom shortcuts. It provides observables for listening to individual key presses, shortcut combinations, and key state changes, making it ideal for implementing keyboard-driven functionality. "),t()(),i(8,"section")(9,"app-h2"),e(10,"Listening To Key Presses"),t(),i(11,"p"),e(12," The service listens globally to "),i(13,"code"),e(14,"keydown"),t(),e(15,", "),i(16,"code"),e(17,"keyup"),t(),e(18,", and "),i(19,"code"),e(20,"blur"),t(),e(21," events from the document and window. When a key is pressed or released, the corresponding event is captured and processed. "),t(),i(22,"p"),e(23," Use "),i(24,"code"),e(25,"listenToKey"),t(),e(26," method to listen to a specific key. It takes the name of the key (see "),i(27,"a",1),e(28," a list of supported names"),t(),e(29,", some aliases are available too). It returns an observable that emits the key code and keyboard event every time the key is pressed down. "),t(),i(30,"p"),e(31," This method, as well as all other methods exposed by the service, treats key codes as case-insensitive and removes any non-alphanumeric characters. For example, the code "),i(32,"code"),e(33,"_NuMpAd EnTeR!"),t(),e(34," still resolves to "),i(35,"code"),e(36,"NumpadEnter"),t(),e(37,". "),t(),s(38,"app-code-example",2),t(),i(39,"section")(40,"app-h2"),e(41,"Listening to Keyboard Shortcuts"),t(),i(42,"p"),e(43," Use "),i(44,"code"),e(45,"listenToShortcut"),t(),e(46," method to listen to a keyboard shortcut. It takes an array of key names that make up the shortcut, and returns an observable that emits the keyboard shortcut array and the keyboard event every time the specified keys are pressed at the same time. "),t(),i(47,"p"),e(48,"This feature is particularly useful for implementing custom keyboard shortcuts in applications."),t(),i(49,"p")(50,"strong"),e(51,"Note:"),t(),e(52," modifier keys in the shortcut can be configured to allow only left, only right, or any modifier key (eg. "),i(53,"code"),e(54,"ControlLeft"),t(),e(55," and "),i(56,"code"),e(57,"ControlRight"),t(),e(58," for left and right Ctrl keys respectively, or just "),i(59,"code"),e(60,"Control"),t(),e(61," to allow any of the two). The Alt key is an exception, where just "),i(62,"code"),e(63,"Alt"),t(),e(64," translates to "),i(65,"code"),e(66,"AltLeft"),t(),e(67,". "),t(),s(68,"app-code-example",3),t(),i(69,"section")(70,"app-h2"),e(71,"Listening to Key State Changes"),t(),i(72,"p"),e(73," Use "),i(74,"code"),e(75,"listenToKeyState"),t(),e(76," method to listen to the changes in state of a specific key. It takes the key name, and returns an observable that emits the key name, current state, and the keyboard event every time the specified key is pressed or released. "),t(),i(77,"p"),e(78," This allows for tracking when a key is held down or released, useful for features like game controls or continuous input actions. "),t(),s(79,"app-code-example",4),t(),i(80,"section")(81,"app-h2"),e(82,"Modifier Key Tracking"),t(),i(83,"p"),e(84," The service actively tracks the state of modifier keys including Shift, Control, Alt, and Meta (Windows key on Windows, Command on Mac) on both sides separately, as well as whether lock keys including CapsLock, NumLock, and ScrollLock are currently active. Each modifier has a dedicated signal that indicates whether the key is currently held. "),t(),i(85,"p")(86,"strong"),e(87,"Note:"),t(),e(88," the CapsLock, NumLock, and ScrollLock signals have "),i(89,"code"),e(90,"undefined"),t(),e(91," value by default. Due to technical limitations, it is updated only when the user presses any key on their keyboard. "),t(),s(92,"app-code-example",5),t(),i(93,"section")(94,"app-h2"),e(95,"Supported Key Aliases"),t(),i(96,"p"),e(97,"The service supports the following key aliases in all its methods:"),t(),i(98,"ul")(99,"li")(100,"code"),e(101,"A"),t(),e(102,", ..., "),i(103,"code"),e(104,"Z"),t(),e(105," \u2013 aliases for "),i(106,"code"),e(107,"KeyA"),t(),e(108," to "),i(109,"code"),e(110,"KeyZ"),t()(),i(111,"li")(112,"code"),e(113,"0"),t(),e(114,", ..., "),i(115,"code"),e(116,"9"),t(),e(117," \u2013 aliases for "),i(118,"code"),e(119,"Digit0"),t(),e(120," to "),i(121,"code"),e(122,"Digit9"),t(),e(123," (these represent the top row of numbers, not the numpad!) "),t(),i(124,"li")(125,"code"),e(126,"Ctrl"),t(),e(127,", "),i(128,"code"),e(129,"CtrlLeft"),t(),e(130,", "),i(131,"code"),e(132,"CtrlRight"),t(),e(133," \u2013 aliases for "),i(134,"code"),e(135,"Control"),t(),e(136,", "),i(137,"code"),e(138,"ControlLeft"),t(),e(139,", "),i(140,"code"),e(141,"ControlRight"),t()(),i(142,"li")(143,"code"),e(144,"Win"),t(),e(145," or "),i(146,"code"),e(147,"Windows"),t(),e(148," or "),i(149,"code"),e(150,"Cmd"),t(),e(151," \u2013 aliases for "),i(152,"code"),e(153,"Meta"),t()(),i(154,"li")(155,"code"),e(156,"Alt"),t(),e(157," \u2013 alias for "),i(158,"code"),e(159,"AltLeft"),t()(),i(160,"li")(161,"code"),e(162,"AltGr"),t(),e(163," or "),i(164,"code"),e(165,"AltGraph"),t(),e(166," \u2013 aliases for "),i(167,"code"),e(168,"AltRight"),t()(),i(169,"li")(170,"code"),e(171,"Left"),t(),e(172,", "),i(173,"code"),e(174,"Right"),t(),e(175,", "),i(176,"code"),e(177,"Up"),t(),e(178,", "),i(179,"code"),e(180,"Down"),t(),e(181," \u2013 aliases for "),i(182,"code"),e(183,"ArrowLeft"),t(),e(184,", "),i(185,"code"),e(186,"ArrowRight"),t(),e(187,", etc. "),t()()(),i(188,"section")(189,"app-h2"),e(190,"Lifecycle Management"),t(),i(191,"p"),e(192," The service implements the "),i(193,"code"),e(194,"OnDestroy"),t(),e(195," lifecycle hook to automatically clean up event listeners when the service is destroyed; all associated listener observables are destroyed with it. "),t(),i(196,"p"),e(197," If however the service is not destroyed, but the component listening to the service "),i(198,"i"),e(199,"is"),t(),e(200," destroyed, the observables will keep emitting. In this case, remember to unsubscribe from them manually. "),t()()),o&2&&(l(38),r("data",a.KeyboardServiceListenToKeyExample),l(30),r("data",a.KeyboardServiceListenToShortcutExample),l(11),r("data",a.KeyboardServiceListenToKeyStateExample),l(13),r("data",a.KeyboardServiceModifierKeyStateExample))},dependencies:[h,u,f,c,m],encapsulation:2})}}return n})();var _e={name:"Relative Pos",classes:[{name:"EventRelativePos",description:"Class representing the position of an event relative to a target element. It also determines whether the event position overflows the boundaries of the target element.",typeParams:[{name:"T",type:"HTMLElement",description:"The type of the target HTML element."}],properties:[{name:"target",type:"T",description:"The target element relative to which the event position is calculated."},{name:"top",type:"number",description:"The distance from the top of the target element to the event position."},{name:"right",type:"number",description:"The distance from the event position to the right edge of the target element."},{name:"bottom",type:"number",description:"The distance from the event position to the bottom of the target element."},{name:"left",type:"number",description:"The distance from the left edge of the target element to the event position."},{name:"overflowsTop",type:"boolean",description:"Indicates whether the event position overflows beyond the top of the target element."},{name:"overflowsRight",type:"boolean",description:"Indicates whether the event position overflows beyond the right side of the target element."},{name:"overflowsBottom",type:"boolean",description:"Indicates whether the event position overflows beyond the bottom of the target element."},{name:"overflowsLeft",type:"boolean",description:"Indicates whether the event position overflows beyond the left side of the target element."},{name:"overflows",type:"boolean",description:"Indicates whether the event position overflows any side of the target element."}],methods:[{name:"valueOf",returnType:"{ top: number; right: number; bottom: number; left: number; }",description:"Returns an object representation of the event relative position values."},{name:"toJSON",returnType:"string",description:"Returns a JSON string representation of the event relative position values. Basically takes the output of the <code>valueOf</code> method and stringifies it."},{name:"toString",returnType:"string",description:"Alias of the <code>toJSON</code> method."}]}],functions:[{name:"getEventRelativePos",description:"Computes the position of an event relative to a target element and returns an instance of <code>EventRelativePos</code>.",params:[{name:"event",type:"MouseEvent | TouchEvent | Touch",description:"The event whose position is being determined."},{name:"el",type:"T | ElementRef<T>",description:"The target element or an ElementRef to the target element."}],returnType:"EventRelativePos<T>"}]};var Ge={name:"Relative Pos",exceptions:[{name:"getEventRelativePos",exceptions:[{code:"DKT-FT9000",exceptionText:"DKT-FT9000: Cannot read event position. The TouchEvent has no Touch instances.",description:["This exception occurs when attempting to get the event position from a <code>TouchEvent</code> that contains no <code>Touch</code> instances.","The function <code>getEventRelativePos</code> expects at least one touch point in the event, but if none are available, it cannot determine a position and throws this error."]}]}]};var Qe=(()=>{class n{constructor(){this.RelativePosBasicExample=ue}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["relative-pos-page"]],decls:40,vars:1,consts:[["pageTitle","Relative Pos"],["heading","Computing relative position","initialTab","ts",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The "),i(3,"strong"),e(4,"EventRelativePos"),t(),e(5," class calculates the relative position of a pointer event (mouse or touch) within an HTML element. It determines whether the event overflows beyond the element\u2019s boundaries and provides an easy-to-use interface for accessing this data. "),t()(),i(6,"section")(7,"app-h2"),e(8,"Calculating Relative Position"),t(),i(9,"p"),e(10," The class computes the relative position of an event based on its coordinates in relation to an element\u2019s bounding rectangle. The result is represented with the "),i(11,"code"),e(12,"top"),t(),e(13,", "),i(14,"code"),e(15,"right"),t(),e(16,", "),i(17,"code"),e(18,"bottom"),t(),e(19,", and "),i(20,"code"),e(21,"left"),t(),e(22," properties, which indicate how far the event occurred from each respective edge of the element. "),t(),i(23,"p"),e(24," Additionally, boolean properties such as "),i(25,"code"),e(26,"overflowsTop"),t(),e(27," or "),i(28,"code"),e(29,"overflowsRight"),t(),e(30," indicate whether the event is outside the element\u2019s boundaries in a specific direction. "),t(),i(31,"p"),e(32," The overflow properties provide insight into whether an event is outside the element's boundaries. The "),i(33,"code"),e(34,"overflows"),t(),e(35," property is a combined check that returns "),i(36,"code"),e(37,"true"),t(),e(38," if the event position extends beyond any of the four edges. "),t(),s(39,"app-code-example",1),t()),o&2&&(l(39),r("data",a.RelativePosBasicExample))},dependencies:[h,u,f,c,m],encapsulation:2})}}return n})();var Je={name:"Viewport Observer",services:[{name:"ArdiumViewportObserverService",description:"Service for observing the visibility of elements within the viewport.",providedIn:"root",methods:[{name:"setScrollHost",description:"Sets the element that will trigger the viewport observation (e.g., document or custom element).",params:[{name:"element",type:"HTMLElement | Document",description:"The element or document to observe for scroll events.",required:!0}],returnType:"void"},{name:"observeElement",description:"Observes an element and tracks its visibility within the viewport, based on the provided configuration.",params:[{name:"element",type:"HTMLElement | ElementRef<HTMLElement>",description:"The target element to observe.",required:!0},{name:"config",type:"Partial<ArdViewportObserverConfig>",description:"Optional configuration to override default settings for the observer.",required:!1}],returnType:"ArdViewportObserverRef"},{name:"observeById",description:"Observes an element by its ID and tracks its visibility within the viewport.",params:[{name:"id",type:"string",description:"The ID of the element to observe.",required:!0},{name:"config",type:"Partial<ArdViewportObserverConfig>",description:"Optional configuration to override default settings for the observer.",required:!1}],returnType:"ArdViewportObserverRef"},{name:"observeByQuery",description:"Observes an element using a CSS selector and tracks its visibility within the viewport.",params:[{name:"query",type:"string",description:"The CSS selector to target the element to observe.",required:!0},{name:"config",type:"Partial<ArdViewportObserverConfig>",description:"Optional configuration to override default settings for the observer.",required:!1}],returnType:"ArdViewportObserverRef"},{name:"recheckAll",description:"Rechecks the visibility of all observed elements.",params:[],returnType:"void"}]}],enums:[{name:"ViewportRelation",description:"Enum describing the relationship of an element to the viewport.",definition:`export enum ViewportRelation {
  Above = 'above',
  PartiallyAbove = 'partially-above',
  Inside = 'inside',
  PartiallyBelow = 'partially-below',
  Below = 'below',
  InsideButTooLarge = 'inside-too-large',
  Undefined = 'undefined',
}`}],interfaces:[{name:"ArdViewportObserverConfig",description:"Configuration interface for the ArdiumViewportObserverService.",properties:[{name:"margin",type:"number | RequireAtLeastOne<{ top: number; bottom: number }>",description:"Defines the margin values to adjust the viewport observation."},{name:"throttleTime",type:"number",description:"Time (in milliseconds) to throttle updates during scrolling or resizing events."}]},{name:"ArdViewportObserverDefaults",description:"Interface that extends ArdViewportObserverConfig and provides default values.",properties:[{name:"margin",type:"Required<Exclude<ArdViewportObserverConfig['margin'], undefined>>",description:"The default margin settings for the viewport observer."},{name:"throttleTime",type:"number",description:"The default throttle time in milliseconds."}]}],classes:[{name:"ArdViewportObserverRef",description:"Reference class representing an observed element in the viewport.",properties:[{name:"element",type:"HTMLElement",description:"The observed element."},{name:"margins",type:"Readonly<{ top: Signal<number>; bottom: Signal<number> }>",description:"The margins (top and bottom) for the observed element."},{name:"position",type:"Signal<{ top: number; bottom: number } | undefined>",description:"The position of the element relative to the viewport."},{name:"viewportRelation",type:"Signal<ViewportRelation | undefined>",description:"The relationship of the element to the viewport (e.g., inside, above, below)."},{name:"isInViewport",type:"Signal<boolean | undefined>",description:"Indicates whether the element is in the viewport based on the current relation."},{name:"isDestroyed",type:"ReadonlySignal<boolean>",description:"Indicates if the observer reference has been destroyed."}],methods:[{name:"recheck",description:"Recalculates the position and viewport relation of the observed element.",params:[],returnType:"void"},{name:"destroy",description:"Destroys the observer reference and unsubscribes from all subscriptions.",params:[],returnType:"void"},{name:"setMargin",description:"Sets the margin for the observed element and recalculates the position.",overloads:[{description:"Sets the top and bottom margins to the same value.",params:[{name:"topAndBottom",type:"number",description:"Sets the top and bottom margins to the same value.",required:!0}],returnType:"void"},{description:"Sets the top and bottom margins to two different values.",params:[{name:"top",type:"number",description:"The top margin.",required:!1},{name:"bottom",type:"number",description:"The bottom margin.",required:!1}],returnType:"void"}]}]}],constants:[{name:"ARD_VIEWPORT_OBSERVER_DEFAULTS",type:"InjectionToken<ArdViewportObserverDefaults>",description:"Injection token for the default configuration of the viewport observer service."}],functions:[{name:"provideViewportObserverDefaults",description:"A function to provide custom default configuration for the ArdiumViewportObserverService via dependency injection.",params:[{name:"config",type:"Partial<ArdViewportObserverDefaults>",description:"A partial configuration object to override the default values for the viewport observer.",required:!0}],returnType:"Provider"}]};var $e={name:"Viewport Observer",exceptions:[{name:"ArdiumViewportObserverService",exceptions:[{code:"DKT-NF0001",exceptionText:'Trying to observe an element by id, but the element with id "<i>id</i>" does not exist.',description:["This exception is thrown when the method <code>observeById</code> is called with an <i>id</i> that does not match any element in the document.","The service attempts to observe an element by its id but fails if no such element is found in the DOM."],exampleResults:[{code:`const viewportService = inject(ArdiumViewportObserverService);

const observer = viewportService.observeById('non-existent-id'); // <-- this produces the exception
`,codeLanguage:b.TS,result:'DKT-NF0001: Trying to observe an element by id, but the element with id "non-existent-id" does not exist.'}]},{code:"DKT-NF0002",exceptionText:'Trying to observe an element by query, but no element matching "<i>query</i>" exists.',description:["This exception is thrown when the method <code>observeByQuery</code> is called with a <i>query</i> that does not match any element in the document.","The service attempts to observe an element by its query selector but fails if no such element is found in the DOM."],exampleResults:[{code:`const viewportService = inject(ArdiumViewportObserverService);

const observer = viewportService.observeByQuery('.non-existent-class'); // <-- this produces the exception
`,codeLanguage:b.TS,result:'DKT-NF0002: Trying to observe an element by query, but no element matching ".non-existent-class" exists.'}]}]}]};var Xe=(()=>{class n{constructor(){this.ObserverRefExampleData=he}static{this.\u0275fac=function(o){return new(o||n)}}static{this.\u0275cmp=p({type:n,selectors:[["viewport-observer-page"]],decls:143,vars:1,consts:[["pageTitle","Viewport Observer"],["heading","Basic observer ref usage",3,"data"]],template:function(o,a){o&1&&(i(0,"app-introduction",0)(1,"p"),e(2," The "),i(3,"strong"),e(4,"Viewport Observer"),t(),e(5," tracks element visibility within the viewport. It listens for scroll events on a specified host element and notifies registered observers when elements enter or leave the viewport. "),t(),i(6,"p"),e(7," Observers can be registered by passing an element, searching by ID, or using a query selector. The observer can be configured with margin and throttling options for fine-tuned behavior. "),t()(),i(8,"section")(9,"app-h2"),e(10,"About Viewport Observers"),t(),i(11,"p"),e(12," Viewport observers track an element\u2019s position relative to the viewport, specifically whether the element is inside or outside it. "),t(),i(13,"p"),e(14,"Use the Viewport Observer service to register new observers:"),t(),i(15,"ul")(16,"li")(17,"code"),e(18,"observeElement"),t(),e(19," \u2014 observes a given "),i(20,"code"),e(21,"HTMLElement"),t(),e(22," or "),i(23,"code"),e(24,"ElementRef"),t()(),i(25,"li")(26,"code"),e(27,"observeById"),t(),e(28," \u2014 observes the first element with the provided ID"),t(),i(29,"li")(30,"code"),e(31,"observeByQuery"),t(),e(32," \u2014 observes the first element matching the provided CSS selector"),t()(),i(33,"p"),e(34," These methods should be called after the view element is initialized. The service doesn\u2019t check for this automatically. All methods return an "),i(35,"code"),e(36,"ArdViewportObserverRef"),t(),e(37," instance, which exposes further reactive options. "),t()(),i(38,"section")(39,"app-h2"),e(40,"Using "),i(41,"code"),e(42,"ArdViewportObserverRef"),t()(),i(43,"p"),e(44," The "),i(45,"code"),e(46,"ArdViewportObserverRef"),t(),e(47," class represents an individual viewport observer instance. It has a "),i(48,"code"),e(49,"viewportRelation"),t(),e(50," property, which returns the current viewport relation. Possible values include: "),t(),i(51,"ul")(52,"li")(53,"code"),e(54,"ViewportRelation.Above"),t(),e(55," \u2014 element is fully above the viewport."),t(),i(56,"li")(57,"code"),e(58,"ViewportRelation.PartiallyAbove"),t(),e(59," \u2014 element is partially above, partially inside the viewport."),t(),i(60,"li")(61,"code"),e(62,"ViewportRelation.Inside"),t(),e(63," \u2014 element is fully inside the viewport."),t(),i(64,"li")(65,"code"),e(66,"ViewportRelation.PartiallyBelow"),t(),e(67," \u2014 element is partially below, partially inside the viewport."),t(),i(68,"li")(69,"code"),e(70,"ViewportRelation.Below"),t(),e(71," \u2014 element is fully below the viewport."),t()(),i(72,"p"),e(73,"Additionally, there are two special relations:"),t(),i(74,"ul")(75,"li")(76,"code"),e(77,"ViewportRelation.InsideButTooLarge"),t(),e(78," \u2014 element is too large to fit entirely within the viewport."),t(),i(79,"li")(80,"code"),e(81,"ViewportRelation.Undefined"),t(),e(82," \u2014 element's position hasn't been checked yet (only immediately after creating the observer). "),t()(),i(83,"p"),e(84," There is a shorthand signal "),i(85,"code"),e(86,"isInViewport"),t(),e(87,", which returns "),i(88,"code"),e(89,"true"),t(),e(90," if the element is at least partially within the viewport. "),t(),s(91,"app-code-example",1),i(92,"app-h3"),e(93,"When are values updated?"),t(),i(94,"p"),e(95," The service updates all registered observers when the page is scrolled or the window is resized. By default, it listens for scroll events on the "),i(96,"code"),e(97,"document"),t(),e(98," element. This can be changed using the "),i(99,"code"),e(100,"setScrollHost"),t(),e(101," method, which takes an "),i(102,"code"),e(103,"HTMLElement"),t(),e(104,". This change is only necessary if the "),i(105,"code"),e(106,"document"),t(),e(107," is unscrollable, as it may produce incorrect results. "),t(),i(108,"p"),e(109," To manually update all observer values, use the "),i(110,"code"),e(111,"recheckAll()"),t(),e(112," method. Alternatively, use the "),i(113,"code"),e(114,"recheck()"),t(),e(115," method on individual observers. "),t(),i(116,"app-h3"),e(117,"Destroying an Observer"),t(),i(118,"p"),e(119," To stop an observer from reacting to events, use the "),i(120,"code"),e(121,"destroy()"),t(),e(122," method on its reference. The "),i(123,"code"),e(124,"isDestroyed"),t(),e(125," signal indicates whether the ref has been destroyed. "),t(),i(126,"p"),e(127,"When the service is destroyed, all registered observers are automatically destroyed."),t()(),i(128,"section")(129,"app-h2"),e(130,"Further Configuration"),t(),i(131,"app-h3"),e(132,"Margins"),t(),i(133,"p"),e(134," Margins define how close an element must be to the viewport to be considered visible. They can be specified as a single value or separate values for top and bottom. Positive values shrink the viewport (elements may still be visible, but treated as outside the viewport). Negative values extend the viewport beyond the visible area. "),t(),i(135,"p"),e(136," Margins can be set when registering the listener, through the optional options object, or updated later using the observer ref methods. "),t(),i(137,"app-h3"),e(138,"Throttling"),t(),i(139,"p"),e(140," Throttling limits how often scroll events are processed, improving performance when dealing with multiple observers. By default, throttling is set to 100 ms. "),t(),i(141,"p"),e(142,"Throttling is configured during listener registration using the options object."),t()()),o&2&&(l(91),r("data",a.ObserverRefExampleData))},dependencies:[h,u,f,c,m,C],encapsulation:2})}}return n})();var R=()=>[g("coercion","Coercion","Utility functions for coercing inputs into specific types",ve,ge),g("click-outside","Click outside","Directive that fires an event when clicked outside an element",ye,fe),g("custom-signals","Custom signals","A set of custom, specialized signals",Se,xe,Ee),g("dom-boxes","DOM Boxes","Functions similar to getClientBoundingRect",we,Te),g("escape-html","Escape HTML","Pipe and function for escaping HTML and XML code",De,Ce),g("file-pipes","File pipes","Set of pipes for displaying information about a File",Ae,ke),g("file-system","File System","Service for downloading files and asking the user to upload files",qe,Pe,Re),g("hold","Hold","Directive that fires an event when user holds down a click",Ie,He),g("http-service","HTTP Service","Extension of HTTP Client with support for default options",ze,Le,Fe),g("infinite-scroll","Infinite scroll","Directive for building infinite scroll containers",Ue,Ke,je),g("keyboard-service","Keyboard service","Service for detecting key presses and keyboard shortcuts",We,Ne,Ve),g("relative-pos","Relative pos","Get click position relative to an element",Qe,_e,Ge),g("viewport-observer","Viewport observer","Observe elements' positions relative to the viewport",Xe,Je,$e)],Rn=[{path:"",component:Me,title:"Devkit :: Ardium UI Docs"},...R().map(n=>q(O({},n),{title:`${n.name} :: Ardium UI Docs`}))];export{R as a,Rn as b};
